/*
Navicat MySQL Data Transfer

Source Server         : 127.0.0.1
Source Server Version : 50728
Source Host           : localhost:3306
Source Database       : myeducation

Target Server Type    : MYSQL
Target Server Version : 50728
File Encoding         : 65001

Date: 2019-12-23 09:51:24
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for auth_group
-- ----------------------------
DROP TABLE IF EXISTS `auth_group`;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of auth_group
-- ----------------------------

-- ----------------------------
-- Table structure for auth_group_permissions
-- ----------------------------
DROP TABLE IF EXISTS `auth_group_permissions`;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of auth_group_permissions
-- ----------------------------

-- ----------------------------
-- Table structure for auth_permission
-- ----------------------------
DROP TABLE IF EXISTS `auth_permission`;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=153 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of auth_permission
-- ----------------------------
INSERT INTO `auth_permission` VALUES ('1', 'Can add log entry', '1', 'add_logentry');
INSERT INTO `auth_permission` VALUES ('2', 'Can change log entry', '1', 'change_logentry');
INSERT INTO `auth_permission` VALUES ('3', 'Can delete log entry', '1', 'delete_logentry');
INSERT INTO `auth_permission` VALUES ('4', 'Can view log entry', '1', 'view_logentry');
INSERT INTO `auth_permission` VALUES ('5', 'Can add permission', '2', 'add_permission');
INSERT INTO `auth_permission` VALUES ('6', 'Can change permission', '2', 'change_permission');
INSERT INTO `auth_permission` VALUES ('7', 'Can delete permission', '2', 'delete_permission');
INSERT INTO `auth_permission` VALUES ('8', 'Can view permission', '2', 'view_permission');
INSERT INTO `auth_permission` VALUES ('9', 'Can add group', '3', 'add_group');
INSERT INTO `auth_permission` VALUES ('10', 'Can change group', '3', 'change_group');
INSERT INTO `auth_permission` VALUES ('11', 'Can delete group', '3', 'delete_group');
INSERT INTO `auth_permission` VALUES ('12', 'Can view group', '3', 'view_group');
INSERT INTO `auth_permission` VALUES ('13', 'Can add content type', '4', 'add_contenttype');
INSERT INTO `auth_permission` VALUES ('14', 'Can change content type', '4', 'change_contenttype');
INSERT INTO `auth_permission` VALUES ('15', 'Can delete content type', '4', 'delete_contenttype');
INSERT INTO `auth_permission` VALUES ('16', 'Can view content type', '4', 'view_contenttype');
INSERT INTO `auth_permission` VALUES ('17', 'Can add session', '5', 'add_session');
INSERT INTO `auth_permission` VALUES ('18', 'Can change session', '5', 'change_session');
INSERT INTO `auth_permission` VALUES ('19', 'Can delete session', '5', 'delete_session');
INSERT INTO `auth_permission` VALUES ('20', 'Can view session', '5', 'view_session');
INSERT INTO `auth_permission` VALUES ('21', 'Can add 轮播图', '6', 'add_banner');
INSERT INTO `auth_permission` VALUES ('22', 'Can change 轮播图', '6', 'change_banner');
INSERT INTO `auth_permission` VALUES ('23', 'Can delete 轮播图', '6', 'delete_banner');
INSERT INTO `auth_permission` VALUES ('24', 'Can view 轮播图', '6', 'view_banner');
INSERT INTO `auth_permission` VALUES ('25', 'Can add 邮箱验证码', '7', 'add_emailverifyrecord');
INSERT INTO `auth_permission` VALUES ('26', 'Can change 邮箱验证码', '7', 'change_emailverifyrecord');
INSERT INTO `auth_permission` VALUES ('27', 'Can delete 邮箱验证码', '7', 'delete_emailverifyrecord');
INSERT INTO `auth_permission` VALUES ('28', 'Can view 邮箱验证码', '7', 'view_emailverifyrecord');
INSERT INTO `auth_permission` VALUES ('29', 'Can add 用户信息', '8', 'add_userprofile');
INSERT INTO `auth_permission` VALUES ('30', 'Can change 用户信息', '8', 'change_userprofile');
INSERT INTO `auth_permission` VALUES ('31', 'Can delete 用户信息', '8', 'delete_userprofile');
INSERT INTO `auth_permission` VALUES ('32', 'Can view 用户信息', '8', 'view_userprofile');
INSERT INTO `auth_permission` VALUES ('33', 'Can add 课程', '9', 'add_course');
INSERT INTO `auth_permission` VALUES ('34', 'Can change 课程', '9', 'change_course');
INSERT INTO `auth_permission` VALUES ('35', 'Can delete 课程', '9', 'delete_course');
INSERT INTO `auth_permission` VALUES ('36', 'Can view 课程', '9', 'view_course');
INSERT INTO `auth_permission` VALUES ('37', 'Can add 章节', '10', 'add_lesson');
INSERT INTO `auth_permission` VALUES ('38', 'Can change 章节', '10', 'change_lesson');
INSERT INTO `auth_permission` VALUES ('39', 'Can delete 章节', '10', 'delete_lesson');
INSERT INTO `auth_permission` VALUES ('40', 'Can view 章节', '10', 'view_lesson');
INSERT INTO `auth_permission` VALUES ('41', 'Can add 视频', '11', 'add_video');
INSERT INTO `auth_permission` VALUES ('42', 'Can change 视频', '11', 'change_video');
INSERT INTO `auth_permission` VALUES ('43', 'Can delete 视频', '11', 'delete_video');
INSERT INTO `auth_permission` VALUES ('44', 'Can view 视频', '11', 'view_video');
INSERT INTO `auth_permission` VALUES ('45', 'Can add 课程资源', '12', 'add_courseresource');
INSERT INTO `auth_permission` VALUES ('46', 'Can change 课程资源', '12', 'change_courseresource');
INSERT INTO `auth_permission` VALUES ('47', 'Can delete 课程资源', '12', 'delete_courseresource');
INSERT INTO `auth_permission` VALUES ('48', 'Can view 课程资源', '12', 'view_courseresource');
INSERT INTO `auth_permission` VALUES ('49', 'Can add 城市', '13', 'add_city');
INSERT INTO `auth_permission` VALUES ('50', 'Can change 城市', '13', 'change_city');
INSERT INTO `auth_permission` VALUES ('51', 'Can delete 城市', '13', 'delete_city');
INSERT INTO `auth_permission` VALUES ('52', 'Can view 城市', '13', 'view_city');
INSERT INTO `auth_permission` VALUES ('53', 'Can add 课程机构', '14', 'add_courseorganization');
INSERT INTO `auth_permission` VALUES ('54', 'Can change 课程机构', '14', 'change_courseorganization');
INSERT INTO `auth_permission` VALUES ('55', 'Can delete 课程机构', '14', 'delete_courseorganization');
INSERT INTO `auth_permission` VALUES ('56', 'Can view 课程机构', '14', 'view_courseorganization');
INSERT INTO `auth_permission` VALUES ('57', 'Can add 机构教师', '15', 'add_teacher');
INSERT INTO `auth_permission` VALUES ('58', 'Can change 机构教师', '15', 'change_teacher');
INSERT INTO `auth_permission` VALUES ('59', 'Can delete 机构教师', '15', 'delete_teacher');
INSERT INTO `auth_permission` VALUES ('60', 'Can view 机构教师', '15', 'view_teacher');
INSERT INTO `auth_permission` VALUES ('61', 'Can add 课程评论', '16', 'add_coursecomment');
INSERT INTO `auth_permission` VALUES ('62', 'Can change 课程评论', '16', 'change_coursecomment');
INSERT INTO `auth_permission` VALUES ('63', 'Can delete 课程评论', '16', 'delete_coursecomment');
INSERT INTO `auth_permission` VALUES ('64', 'Can view 课程评论', '16', 'view_coursecomment');
INSERT INTO `auth_permission` VALUES ('65', 'Can add 用户咨询', '17', 'add_userask');
INSERT INTO `auth_permission` VALUES ('66', 'Can change 用户咨询', '17', 'change_userask');
INSERT INTO `auth_permission` VALUES ('67', 'Can delete 用户咨询', '17', 'delete_userask');
INSERT INTO `auth_permission` VALUES ('68', 'Can view 用户咨询', '17', 'view_userask');
INSERT INTO `auth_permission` VALUES ('69', 'Can add 用户课程', '18', 'add_usercourse');
INSERT INTO `auth_permission` VALUES ('70', 'Can change 用户课程', '18', 'change_usercourse');
INSERT INTO `auth_permission` VALUES ('71', 'Can delete 用户课程', '18', 'delete_usercourse');
INSERT INTO `auth_permission` VALUES ('72', 'Can view 用户课程', '18', 'view_usercourse');
INSERT INTO `auth_permission` VALUES ('73', 'Can add 用户收藏', '19', 'add_userfavorite');
INSERT INTO `auth_permission` VALUES ('74', 'Can change 用户收藏', '19', 'change_userfavorite');
INSERT INTO `auth_permission` VALUES ('75', 'Can delete 用户收藏', '19', 'delete_userfavorite');
INSERT INTO `auth_permission` VALUES ('76', 'Can view 用户收藏', '19', 'view_userfavorite');
INSERT INTO `auth_permission` VALUES ('77', 'Can add 用户消息', '20', 'add_usermessage');
INSERT INTO `auth_permission` VALUES ('78', 'Can change 用户消息', '20', 'change_usermessage');
INSERT INTO `auth_permission` VALUES ('79', 'Can delete 用户消息', '20', 'delete_usermessage');
INSERT INTO `auth_permission` VALUES ('80', 'Can view 用户消息', '20', 'view_usermessage');
INSERT INTO `auth_permission` VALUES ('81', 'Can add Bookmark', '21', 'add_bookmark');
INSERT INTO `auth_permission` VALUES ('82', 'Can change Bookmark', '21', 'change_bookmark');
INSERT INTO `auth_permission` VALUES ('83', 'Can delete Bookmark', '21', 'delete_bookmark');
INSERT INTO `auth_permission` VALUES ('84', 'Can view Bookmark', '21', 'view_bookmark');
INSERT INTO `auth_permission` VALUES ('85', 'Can add User Setting', '22', 'add_usersettings');
INSERT INTO `auth_permission` VALUES ('86', 'Can change User Setting', '22', 'change_usersettings');
INSERT INTO `auth_permission` VALUES ('87', 'Can delete User Setting', '22', 'delete_usersettings');
INSERT INTO `auth_permission` VALUES ('88', 'Can view User Setting', '22', 'view_usersettings');
INSERT INTO `auth_permission` VALUES ('89', 'Can add User Widget', '23', 'add_userwidget');
INSERT INTO `auth_permission` VALUES ('90', 'Can change User Widget', '23', 'change_userwidget');
INSERT INTO `auth_permission` VALUES ('91', 'Can delete User Widget', '23', 'delete_userwidget');
INSERT INTO `auth_permission` VALUES ('92', 'Can view User Widget', '23', 'view_userwidget');
INSERT INTO `auth_permission` VALUES ('93', 'Can add log entry', '24', 'add_log');
INSERT INTO `auth_permission` VALUES ('94', 'Can change log entry', '24', 'change_log');
INSERT INTO `auth_permission` VALUES ('95', 'Can delete log entry', '24', 'delete_log');
INSERT INTO `auth_permission` VALUES ('96', 'Can view log entry', '24', 'view_log');
INSERT INTO `auth_permission` VALUES ('97', 'Can add captcha store', '25', 'add_captchastore');
INSERT INTO `auth_permission` VALUES ('98', 'Can change captcha store', '25', 'change_captchastore');
INSERT INTO `auth_permission` VALUES ('99', 'Can delete captcha store', '25', 'delete_captchastore');
INSERT INTO `auth_permission` VALUES ('100', 'Can view captcha store', '25', 'view_captchastore');
INSERT INTO `auth_permission` VALUES ('101', 'Can view 轮播课程', '26', 'view_bannercourse');
INSERT INTO `auth_permission` VALUES ('102', 'Can add 轮播课程', '26', 'add_bannercourse');
INSERT INTO `auth_permission` VALUES ('103', 'Can change 轮播课程', '26', 'change_bannercourse');
INSERT INTO `auth_permission` VALUES ('104', 'Can delete 轮播课程', '26', 'delete_bannercourse');
INSERT INTO `auth_permission` VALUES ('105', 'Can add 助教信息表', '27', 'add_teacherassistant');
INSERT INTO `auth_permission` VALUES ('106', 'Can change 助教信息表', '27', 'change_teacherassistant');
INSERT INTO `auth_permission` VALUES ('107', 'Can delete 助教信息表', '27', 'delete_teacherassistant');
INSERT INTO `auth_permission` VALUES ('108', 'Can view 助教信息表', '27', 'view_teacherassistant');
INSERT INTO `auth_permission` VALUES ('109', 'Can add 文章', '28', 'add_article');
INSERT INTO `auth_permission` VALUES ('110', 'Can change 文章', '28', 'change_article');
INSERT INTO `auth_permission` VALUES ('111', 'Can delete 文章', '28', 'delete_article');
INSERT INTO `auth_permission` VALUES ('112', 'Can view 文章', '28', 'view_article');
INSERT INTO `auth_permission` VALUES ('113', 'Can add 标签', '29', 'add_tag');
INSERT INTO `auth_permission` VALUES ('114', 'Can change 标签', '29', 'change_tag');
INSERT INTO `auth_permission` VALUES ('115', 'Can delete 标签', '29', 'delete_tag');
INSERT INTO `auth_permission` VALUES ('116', 'Can view 标签', '29', 'view_tag');
INSERT INTO `auth_permission` VALUES ('117', 'Can add tutorial', '30', 'add_tutorial');
INSERT INTO `auth_permission` VALUES ('118', 'Can change tutorial', '30', 'change_tutorial');
INSERT INTO `auth_permission` VALUES ('119', 'Can delete tutorial', '30', 'delete_tutorial');
INSERT INTO `auth_permission` VALUES ('120', 'Can view tutorial', '30', 'view_tutorial');
INSERT INTO `auth_permission` VALUES ('121', 'Can add 章節', '31', 'add_section');
INSERT INTO `auth_permission` VALUES ('122', 'Can change 章節', '31', 'change_section');
INSERT INTO `auth_permission` VALUES ('123', 'Can delete 章節', '31', 'delete_section');
INSERT INTO `auth_permission` VALUES ('124', 'Can view 章節', '31', 'view_section');
INSERT INTO `auth_permission` VALUES ('125', 'Can add category', '32', 'add_category');
INSERT INTO `auth_permission` VALUES ('126', 'Can change category', '32', 'change_category');
INSERT INTO `auth_permission` VALUES ('127', 'Can delete category', '32', 'delete_category');
INSERT INTO `auth_permission` VALUES ('128', 'Can view category', '32', 'view_category');
INSERT INTO `auth_permission` VALUES ('129', 'Can add 評論', '33', 'add_articlecomment');
INSERT INTO `auth_permission` VALUES ('130', 'Can change 評論', '33', 'change_articlecomment');
INSERT INTO `auth_permission` VALUES ('131', 'Can delete 評論', '33', 'delete_articlecomment');
INSERT INTO `auth_permission` VALUES ('132', 'Can view 評論', '33', 'view_articlecomment');
INSERT INTO `auth_permission` VALUES ('133', 'Can add 用户教程', '34', 'add_usertutorial');
INSERT INTO `auth_permission` VALUES ('134', 'Can change 用户教程', '34', 'change_usertutorial');
INSERT INTO `auth_permission` VALUES ('135', 'Can delete 用户教程', '34', 'delete_usertutorial');
INSERT INTO `auth_permission` VALUES ('136', 'Can view 用户教程', '34', 'view_usertutorial');
INSERT INTO `auth_permission` VALUES ('137', 'Can add 教程评论', '35', 'add_tutorialcomment');
INSERT INTO `auth_permission` VALUES ('138', 'Can change 教程评论', '35', 'change_tutorialcomment');
INSERT INTO `auth_permission` VALUES ('139', 'Can delete 教程评论', '35', 'delete_tutorialcomment');
INSERT INTO `auth_permission` VALUES ('140', 'Can view 教程评论', '35', 'view_tutorialcomment');
INSERT INTO `auth_permission` VALUES ('141', 'Can add 文章评论', '36', 'add_articlecomment');
INSERT INTO `auth_permission` VALUES ('142', 'Can change 文章评论', '36', 'change_articlecomment');
INSERT INTO `auth_permission` VALUES ('143', 'Can delete 文章评论', '36', 'delete_articlecomment');
INSERT INTO `auth_permission` VALUES ('144', 'Can view 文章评论', '36', 'view_articlecomment');
INSERT INTO `auth_permission` VALUES ('145', 'Can add user teacher', '37', 'add_userteacher');
INSERT INTO `auth_permission` VALUES ('146', 'Can change user teacher', '37', 'change_userteacher');
INSERT INTO `auth_permission` VALUES ('147', 'Can delete user teacher', '37', 'delete_userteacher');
INSERT INTO `auth_permission` VALUES ('148', 'Can view user teacher', '37', 'view_userteacher');
INSERT INTO `auth_permission` VALUES ('149', 'Can add 文章资源', '38', 'add_articleresource');
INSERT INTO `auth_permission` VALUES ('150', 'Can change 文章资源', '38', 'change_articleresource');
INSERT INTO `auth_permission` VALUES ('151', 'Can delete 文章资源', '38', 'delete_articleresource');
INSERT INTO `auth_permission` VALUES ('152', 'Can view 文章资源', '38', 'view_articleresource');

-- ----------------------------
-- Table structure for blog_article
-- ----------------------------
DROP TABLE IF EXISTS `blog_article`;
CREATE TABLE `blog_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `excerpt` varchar(200) DEFAULT NULL,
  `content` longtext NOT NULL,
  `click_nums` int(11) NOT NULL,
  `is_recommend` tinyint(1) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `teacher_id` int(11) DEFAULT NULL,
  `video_id` int(11) DEFAULT NULL,
  `category_id` int(11) DEFAULT NULL,
  `image` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_article_teacher_id_def30914_fk_organization_teacher_id` (`teacher_id`),
  KEY `blog_article_video_id_d987148b_fk_course_video_id` (`video_id`),
  KEY `blog_article_category_id_7e38f15e_fk_blog_category_id` (`category_id`),
  CONSTRAINT `blog_article_category_id_7e38f15e_fk_blog_category_id` FOREIGN KEY (`category_id`) REFERENCES `blog_category` (`id`),
  CONSTRAINT `blog_article_teacher_id_def30914_fk_organization_teacher_id` FOREIGN KEY (`teacher_id`) REFERENCES `organization_teacher` (`id`),
  CONSTRAINT `blog_article_video_id_d987148b_fk_course_video_id` FOREIGN KEY (`video_id`) REFERENCES `course_video` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_article
-- ----------------------------
INSERT INTO `blog_article` VALUES ('1', 'virtualenv使用技巧大全,python新手必备知识', 'virtualenv使用技巧大全,python新手必备知识', '<p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">搞Python开发时，总会遇到需要同时运行多个不同软件版本项目的时候。每个项目的依赖需求也不一样，那咋整？这个时候我们就需要用到Virtualenv了。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">那么什么是Virtualenv呢？Virtualenv是一个能创建隔绝的独立的Python虚拟环境工具。它能够建立多个相互独立，互不影响的Python工作环境。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">Virtualenv的安装很简单，一行命令就能搞定：</p><pre class=\"brush:bash;toolbar:false hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">pip&nbsp;install&nbsp;virtualenv</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">Virtualenv安装好之后，就是给自己的项目创建一个虚拟环境。</p><pre class=\"hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">virtualenv&nbsp;pyweb&nbsp;&nbsp;#pyweb&nbsp;&nbsp;为虚拟环境目录名，目录名自定义.</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">当然你也可以使用下面的命令创建指定Python版本的虚拟环境。</p><pre class=\"brush:bash;toolbar:false hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">virtualenv&nbsp;--python=/usr/bin/python3.6&nbsp;pyweb&nbsp;&nbsp;&nbsp;&nbsp;#指定创建一个版本为python3.6的虚拟环境</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">在哪个目录下创建，就会在该目录下生成一个名为pyweb的文件夹。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">至于启动虚拟环境，Windows下和Linux下，略有不同。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(255, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Linux下：</span></span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/1_20180710223628_171.jpg\" title=\"\" alt=\"1.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们进入创建的虚拟环境的<span style=\"box-sizing: border-box; color: rgb(255, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">bin</span>目录下，然后使用如下命令启动</p><pre class=\"brush:bash;toolbar:false hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">source&nbsp;activate</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">启动成功之后就会在命令行前出现一个pyweb<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(51, 51, 51); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; background-color: rgb(251, 250, 248);\"><img src=\"https://www.django.cn/media/upimg/2_20180710224039_224.jpg\" title=\"\" alt=\"2.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> <br style=\"box-sizing: border-box; color: inherit;\"/> </span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(51, 51, 51); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; background-color: rgb(251, 250, 248);\">这就说明虚拟环境启动成功。我们就可以在这个虚拟环境下做自己想要做的事了。</span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(51, 51, 51); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; background-color: rgb(251, 250, 248);\"></span><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(255, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Windows下：</span></span><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">进入pyweb目录下的Scripts目录下。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/1_20180710224943_102.jpg\" title=\"\" alt=\"1.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">然后输入：activate 回车，就能启动虚拟环境。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/3_20180710225048_180.jpg\" title=\"\" alt=\"3.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">至于退出虚拟环境，使用如下命令即可！</p><pre class=\"brush:bash;toolbar:false hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">deactivate</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(51, 51, 51); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"></span><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">安装virtualenv以后，我们不同的项目只需要安装不同的虚拟环境，在不同的环境下工作，就不再相互影响到。妈妈再也不用担心我们出现各种莫名其妙的坑了。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(255, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">温馨提示：</span></span>安装virtualenv的时候，一定要留意自己系统默认的Python版本，不同版本安装出来的virtualenv版本可能不一样。</p><p><br/> </p>', '54', '0', '2019-11-24 14:34:40.832636', '2019-12-04 22:03:31.961472', '1', null, '4', 'article/2019/12/57aa86a0000145c512000460.jpg');
INSERT INTO `blog_article` VALUES ('2', 'CentOS7下部署Django项目详细操作步骤', 'CentOS7下部署Django项目详细操作步骤', '<h1 style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin: 0px; font-size: 36px; font-family: Nunito, sans-serif; font-weight: 500; line-height: 1.35; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(0, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-size: 18px;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">部署是基于：centos7+nginx+uwsgi+python3+django 之上做的</span></span></h1><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">软件版本详细介绍，纯净操作系统：Centos7.0&nbsp; Python版本：python3.6 Django版本:django2.0.6<br style=\"box-sizing: border-box; color: inherit;\"/>本文包括以下几个部分内容：</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">㈠、<a href=\"https://www.django.cn/article/show-4.html#buzhou\" target=\"_self\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">服务器环境部署详细步骤</a><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">㈡、<a href=\"https://www.django.cn/article/show-4.html#banqian\" target=\"_self\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">本地项目搬迁到服务器</a><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">㈢、<a href=\"https://www.django.cn/article/show-4.html#yangsi\" target=\"_self\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">Django后台样式丢失解决办法</a><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">㈣、<a href=\"https://www.django.cn/article/show-4.html#ssl\" target=\"_self\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">Django开启SSL证书（https域名）详细步骤</a></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">㈤、<a href=\"https://www.django.cn/article/show-4.html#duo\" target=\"_self\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">Django多站点部署方法</a><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">如果觉得看文字没意思，想看视频教程的，请点击这里：<a href=\"https://mp.weixin.qq.com/s/vF8yC0WUM9B0PmsQSMutiQ\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">Django项目部署视频教程</a><br style=\"box-sizing: border-box; color: inherit;\"/> </p><hr style=\"box-sizing: content-box; color: rgb(62, 69, 76); height: 0px; margin-top: 50px; margin-bottom: 50px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; border-top-style: solid; border-top-color: rgb(222, 222, 222); font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"/><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span id=\"buzhou\" style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">详细步骤(下面步骤都是ROOT权限执行):</span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">一、更新系统软件包</span></span><br style=\"box-sizing: border-box; color: inherit;\"/>yum update -y</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">二、安装软件管理包和可能使用的依赖</span></span></p><pre class=\"hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">yum&nbsp;-y&nbsp;groupinstall&nbsp;&quot;Development&nbsp;tools&quot;yum&nbsp;install&nbsp;openssl-devel&nbsp;bzip2-devel&nbsp;expat-devel&nbsp;gdbm-devel&nbsp;readline-devel&nbsp;sqlite-devel&nbsp;psmisc&nbsp;libffi-devel</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">三、下载Pyhton3到/usr/local 目录<br style=\"box-sizing: border-box; color: inherit;\"/> </span></span></p><pre class=\"brush:bash;toolbar:false hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">cd&nbsp;/usr/local</pre><pre class=\"hljs ruby\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">wget&nbsp;https://www.python.org/ftp/python/3.6.6/Python-3.6.6.tgz</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">解压</p><pre class=\"hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">tar&nbsp;-zxvf&nbsp;Python-3.6.6.tgz</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">进入 Python-3.6.6路径</p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">cd&nbsp;Python-3.6.6</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">编译安装到指定路径</p><pre class=\"hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">./configure&nbsp;--prefix=/usr/local/python3</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">注意：/usr/local/python3 路径可以自己指定，自己记着就行，下边要用到。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">安装python3</p><pre class=\"hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">makemake&nbsp;install</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">安装完成之后 建立软链接 添加变量 方便在终端中直接使用python3</p><pre class=\"hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">ln&nbsp;-s&nbsp;/usr/local/python3/bin/python3.6&nbsp;/usr/bin/python3</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">Python3安装完成之后pip3也一块安装完成，不需要再单独安装<br style=\"box-sizing: border-box; color: inherit;\"/>同样给pip3建立软链接</p><pre class=\"hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">ln&nbsp;-s&nbsp;/usr/local/python3/bin/pip3.6&nbsp;/usr/bin/pip3</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">四、查看Python3和pip3安装情况</span></span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/timg_20180709220813_231.jpg\" title=\"\" alt=\"timg.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">五、安装virtualenv ，建议大家都安装一个virtualenv，方便不同版本项目管理。</span></span></p><pre class=\"hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">pip3&nbsp;install&nbsp;virtualenv</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">建立软链接</p><pre class=\"hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">ln&nbsp;-s&nbsp;/usr/local/python3/bin/virtualenv&nbsp;/usr/bin/virtualenv</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">安装成功在根目录下建立两个文件夹，主要用于存放env和网站文件的。(个人习惯，其它人可根据自己的实际情况处理)</p><pre class=\"hljs perl\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">mkdir&nbsp;-p&nbsp;/data/envmkdir&nbsp;-p&nbsp;/data/wwwroot</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">六、切换到/data/env/下，创建指定版本的虚拟环境。</span></span></p><pre class=\"hljs javascript\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">virtualenv&nbsp;--python=/usr/bin/python3&nbsp;pyweb</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">然后进入/data/env/pyweb/bin<br style=\"box-sizing: border-box; color: inherit;\"/>启动虚拟环境：</p><pre class=\"hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">source&nbsp;activate</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img data-img-idx=\"1\" data-src=\"null\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/timg_20180709220840_146.jpg\" title=\"\" alt=\"timg.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">留意我标记的位置，出现(pyweb)，说明是成功进入虚拟环境。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">七、虚拟环境里用pip3安django和uwsgi</span></span></p><pre class=\"hljs sql\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">pip3&nbsp;install&nbsp;django&nbsp;（如果用于生产的话，则需要指定安装和你项目相同的版本）\r\npip3&nbsp;install&nbsp;uwsgi</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">留意：</span></span><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">uwsgi要安装两次</span>，先在系统里安装一次，然后进入对应的虚拟环境安装一次。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">给uwsgi建立软链接，方便使用</p><pre class=\"hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">ln&nbsp;-s&nbsp;/usr/local/python3/bin/uwsgi&nbsp;/usr/bin/uwsgi</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"></span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">注意：</span></span>如果是项目在本地，想部署到线上的，之后这几步可以不用看，建议跳转到：<a href=\"https://www.django.cn/article/show-4.html#banqian\" target=\"_self\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">本地项目搬迁到服务器</a></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">八、切换到网站目录/data/wwwroot,创建Django项目</span></span></p><pre class=\"hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">django-admin.py&nbsp;startproject&nbsp;mysite</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">创建成功之后，/data/wwwroot下面就会多出一个mysite文件夹，我们的项目就在这个文件夹里。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/timg_20180709220907_136.jpg\" title=\"\" alt=\"timg.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">然后新建立一个名叫blog的APP</p><pre class=\"hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python3&nbsp;manage.py&nbsp;startapp&nbsp;blog</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">进入项目文件夹/data/wwwroot/mysite,添加static和templates，分别用于存放静态文件和模板文件。<br style=\"box-sizing: border-box; color: inherit;\"/>编辑项目里mysite/settings.py文件</p><pre class=\"hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">vim&nbsp;/data/wwwroot/mysite/mysite/settings.py</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/>在INSTALLED_APPS 列表里添加&#39;blog&#39;，注意，后面要加上一个逗号&#39;,&#39;.<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img data-img-idx=\"4\" data-src=\"null\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> <img src=\"https://www.django.cn/media/upimg/timg_20180709220933_398.jpg\" title=\"\" alt=\"timg.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block; float: left;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">修改ALLOWED_HOSTS，[&#39;*&#39;]，可以让任何IP访问</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img data-img-idx=\"6\" data-src=\"null\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/timg_20180709220957_316.jpg\" title=\"\" alt=\"timg.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block; float: left;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">TEMPLATES的DIRS里添加模板路径</p><pre class=\"brush:bash;toolbar:false hljs cs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">os.path.join(BASE_DIR,&nbsp;&#39;templates&#39;)</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/timg_20180709221023_288.jpg\" title=\"\" alt=\"timg.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block; float: left;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img data-img-idx=\"9\" data-src=\"null\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">尾部添加<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs cs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">STATICFILES_DIRS&nbsp;=&nbsp;(\r\n&nbsp;&nbsp;&nbsp;&nbsp;os.path.join(BASE_DIR,&#39;static&#39;),\r\n&nbsp;&nbsp;&nbsp;&nbsp;)</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img data-img-idx=\"10\" data-src=\"null\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/timg_20180709221044_569.jpg\" title=\"\" alt=\"timg.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block; float: left;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">然后 :wq 保存</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">九、在templates下添加index.html文件，输入下面内容。</span></span><br style=\"box-sizing: border-box; color: inherit;\"/>vim /data/wwwroot/mystie/templates/index.html<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:html;toolbar:false hljs xml\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">&lt;!DOCTYPE&nbsp;html&gt;&lt;html&gt;&lt;head&gt;&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;&lt;title&gt;我的网站&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;欢迎光临我的网站！&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> <span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">十、配置URL</span></span><br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs python\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">vim&nbsp;/data/wwwroot/mysite/mysite/urls.pyfrom&nbsp;blog&nbsp;import&nbsp;views&nbsp;&nbsp;#导入viewsurlpatterns&nbsp;=&nbsp;[\r\n&nbsp;&nbsp;&nbsp;&nbsp;...\r\n&nbsp;&nbsp;&nbsp;&nbsp;path(&#39;&#39;,&nbsp;views.index),&nbsp;#添加这行&nbsp;&nbsp;&nbsp;&nbsp;....\r\n]</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/timg_20180709221111_605.jpg\" title=\"\" alt=\"timg.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img data-img-idx=\"13\" data-src=\"null\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> <span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">十一、编辑blog APP下的views.py</span></span><br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs python\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">vim&nbsp;/data/wwwroot/mysite/blog/views.pydef&nbsp;index(request):&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;render(request,&nbsp;&#39;index.html&#39;)</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img data-img-idx=\"14\" data-src=\"null\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/timg_20180709221133_214.jpg\" title=\"\" alt=\"timg.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/> <span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">十二、启动项目</span></span><br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:python;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python3&nbsp;manage.py&nbsp;runserver</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img data-img-idx=\"16\" data-src=\"null\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/timg_20180709221156_198.jpg\" title=\"\" alt=\"timg.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> <br style=\"box-sizing: border-box; color: inherit;\"/>正常运行！</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">十三、Django正常运行之后我们就开始配置一下uwsgi。</span></span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们网站项目路径是 /data/wwwroot/<span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">mysite</span>/,在项目根目录下创建<br style=\"box-sizing: border-box; color: inherit;\"/> <span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">mysite</span>.xml文件，输入如下内容：<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:xml;toolbar:false hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">&lt;uwsgi&gt;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&lt;socket&gt;127.0.0.1:8997&lt;/socket&gt;&nbsp;&lt;!--&nbsp;内部端口，自定义&nbsp;--&gt;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&lt;chdir&gt;/data/wwwroot/mysite/&lt;/chdir&gt;&nbsp;&lt;!--&nbsp;项目路径&nbsp;--&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&lt;module&gt;mysite.wsgi&lt;/module&gt;&nbsp;&nbsp;&lt;!--&nbsp;mysite为wsgi.py所在目录名--&gt;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&lt;processes&gt;4&lt;/processes&gt;&nbsp;&lt;!--&nbsp;进程数&nbsp;--&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&lt;daemonize&gt;uwsgi.log&lt;/daemonize&gt;&nbsp;&lt;!--&nbsp;日志文件&nbsp;--&gt;&lt;/uwsgi&gt;</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">保存<br style=\"box-sizing: border-box; color: inherit;\"/>注意&lt;module&gt;里的<span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">mysite</span>，为wsgi.py所在的目录名。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">十四、安装nginx和配置nginx.conf文件</span></span><br style=\"box-sizing: border-box; color: inherit;\"/>进入home目录，执行下面命令</p><pre class=\"brush:bash;toolbar:false hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">cd&nbsp;/home/</pre><pre class=\"brush:bash;toolbar:false hljs cpp\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">wget&nbsp;http://nginx.org/download/nginx-1.13.7.tar.gz</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">下载完成后，执行解压命令：<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">tar&nbsp;-zxvf&nbsp;nginx-1.13.7.tar.gz</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">进入解压后的nginx-1.13.7文件夹，依次执行以下命令：<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs sql\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">./configure\r\nmake\r\nmake&nbsp;install</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">nginx一般默认安装好的路径为/usr/local/nginx<br style=\"box-sizing: border-box; color: inherit;\"/>在/usr/local/nginx/conf/中先备份一下nginx.conf文件，以防意外。<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">cp&nbsp;nginx.conf&nbsp;nginx.conf.bak</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">然后打开nginx.conf，把原来的内容删除，直接加入以下内容：</p><pre class=\"brush:bash;toolbar:false hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">events&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;worker_connections&nbsp;&nbsp;1024;\r\n}http&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mime.types;\r\n&nbsp;&nbsp;&nbsp;&nbsp;default_type&nbsp;&nbsp;application/octet-stream;\r\n&nbsp;&nbsp;&nbsp;&nbsp;sendfile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on;\r\n&nbsp;&nbsp;&nbsp;&nbsp;server&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listen&nbsp;80;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server_name&nbsp;&nbsp;www.django.cn;&nbsp;#改为自己的域名，没域名修改为127.0.0.1:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;charset&nbsp;utf-8;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;uwsgi_params;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uwsgi_pass&nbsp;127.0.0.1:8997;&nbsp;&nbsp;#端口要和uwsgi里配置的一样&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uwsgi_param&nbsp;UWSGI_SCRIPT&nbsp;mysite.wsgi;&nbsp;&nbsp;#wsgi.py所在的目录名+.wsgi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uwsgi_param&nbsp;UWSGI_CHDIR&nbsp;/data/wwwroot/mysite/;&nbsp;#项目路径&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/static/&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;/data/wwwroot/mysite/static/;&nbsp;#静态资源路径&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">&nbsp;要留意备注的地方，要和UWSGI配置文件mysite.xml，还有项目路径对应上。<br style=\"box-sizing: border-box; color: inherit;\"/>进入/usr/local/nginx/sbin/目录<br style=\"box-sizing: border-box; color: inherit;\"/>执行./nginx -t命令先检查配置文件是否有错，没有错就执行以下命令：<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">./nginx</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/>终端没有任何提示就证明nginx启动成功。可以使用你的服务器地址查看，成功之后就会看到一个nginx欢迎页面。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">之后，在settings.py里设置：</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">1、关闭DEBUG模式。<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">DEBUG =&nbsp;<span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">False&nbsp;</span><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"></span><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">2、ALLOWED_HOSTS设置为* 表示任何IP都可以访问网站。<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">ALLOWED_HOSTS = [&#39;<span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">*</span>&#39;]</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 80, 77); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">十五、访问项目的页面。</span></span><br style=\"box-sizing: border-box; color: inherit;\"/>进入网站项目目录<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">cd&nbsp;/data/wwwroot/mysite/</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">执行下面命令：<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">uwsgi&nbsp;-x&nbsp;mysite.xml</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">以上步骤都没有出错的话。<br style=\"box-sizing: border-box; color: inherit;\"/>进入/usr/local/nginx/sbin/目录<br style=\"box-sizing: border-box; color: inherit;\"/>执行：<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">./nginx&nbsp;-s&nbsp;reload</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">重启nginx 。<br style=\"box-sizing: border-box; color: inherit;\"/>然后在浏览器里访问你的项目地址！<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img data-img-idx=\"18\" data-src=\"null\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/upimg/timg_20180709221319_954.jpg\" title=\"\" alt=\"timg.jpg\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/>成功访问！<br style=\"box-sizing: border-box; color: inherit;\"/>里面最值得留意的就是项目的路径不要弄错，还有，项目的所有操作都要在虚拟环境下进行。<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">环境部署部份，懒的话，直接复制我的代码直接部署就行。</p><hr style=\"box-sizing: content-box; color: rgb(62, 69, 76); height: 0px; margin-top: 50px; margin-bottom: 50px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; border-top-style: solid; border-top-color: rgb(222, 222, 222); font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"/><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-size: 18px;\"><span id=\"banqian\" style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">本地项目搬迁到服务器</span></span><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">本地项目想要部署上线，可以参考下面的步骤：</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">1、备份本地数据库。使用sqlite数据库的话，直接打包数据库文件上传到服务器即可。使用Mysql数据库，要先在本地Mysql里备份导出数据，然后在服务器上安装Mysql数据库软件，Mysql安装具体操作请看：</p><h3 style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 0px 0px 1em; font-size: 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><a href=\"https://www.django.cn/article/show-2.html\" target=\"_blank\" title=\"CentOS7操作系统下快速安装MySQL5.7\" textvalue=\"CentOS7操作系统下快速安装MySQL5.7\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">CentOS7操作系统下快速安装MySQL5.7</a></h3><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">2、在项目目录下用下面的命令把当前的环境依赖包导出到requirements.txt文件<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">pip&nbsp;freeze&nbsp;&gt;&nbsp;requirements.txt</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">3、把项目源码压缩打包。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">4、把项目上传到服务器对应的目录里，解压。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">5、创建新的虚拟环境（参照上面第六步）<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">6、进入虚拟环境然后进入项目路径安装requirements.txt里的依赖包。</p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">pip3&nbsp;install&nbsp;-r&nbsp;requirements.txt</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">7、导入数据库到服务器。（如果用的是Mysql的话）</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">默认使用的是SQLite数据库，就不用做此操作。数据库原来是SQLite的，想换成Mysql，请查看文章：<a href=\"https://www.django.cn/article/show-17.html\" target=\"_blank\" textvalue=\"如何把SQLite数据库转换为Mysql数据库\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">如何把SQLite数据库转换为Mysql数据库</a><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">如果是Mysql数据库的，则在命令行里输入：</p><pre class=\"brush:sql;toolbar:false hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">#导出Mysql,django为你的数据库mysqldump&nbsp;-uroot&nbsp;-ppassword&nbsp;django&gt;django.sql#把django.sql上传到服务器，在服务器里用下面命令导入mysql&nbsp;-uroot&nbsp;-ppassword\r\nuse&nbsp;dajngo;source&nbsp;your&nbsp;Path\\django.sql</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">8、通过python3 manage.py runserver 运行一下项目，如果能正常启动则进行下一步，不能正常运行往上检查。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">9、在项目根目录里添加uwsgi配置文件（参照上面第十三步）</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">10、配置Nginx配置文件。（参考上面第十四步）</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">留意：</span></span>一定要注意Uwsgi和Nginx配置文件里的项目路径和静态资源路径，填写正确了才能成功访问。不然会出现502错误。还有就是，修改Django文件和其它配置文件之后，一定要重启Uwsgi和Nginx，不然不生效。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">Uwsgi和Nginx重启方法：</p><pre class=\"brush:bash;toolbar:false hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">#查看Uwsgi进程ps&nbsp;-ef|grep&nbsp;uwsgi&nbsp;#用kill方法把uwsgi进程杀死，然后启动uwsgikillall&nbsp;-9&nbsp;uwsgi#启动方法uwsgi&nbsp;-x&nbsp;mysite.xml#Nginx平滑重启方法/usr/local/nginx/sbin/nginx&nbsp;-s&nbsp;reload</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">然后在浏览器里访问服务器地址（域名），就能查看到项目。<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">如果想使用域名访问项目，先在域名管理后台把域名解析到服务器IP上来，之后在Nginx配置文件里绑定域名。然后在浏览器里通过绑定的域名访问项目。<br style=\"box-sizing: border-box; color: inherit;\"/> </p><hr style=\"box-sizing: content-box; color: rgb(62, 69, 76); height: 0px; margin-top: 50px; margin-bottom: 50px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; border-top-style: solid; border-top-color: rgb(222, 222, 222); font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"/><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-size: 18px;\"><span id=\"yangsi\" style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">关于线上部署admin后台样式没有生效的问题：</span></span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">方法一：</span><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">1、在settings.py尾部：</p><pre class=\"brush:bash;toolbar:false hljs ini\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">STATIC_ROOT&nbsp;&nbsp;=&nbsp;os.path.join(BASE_DIR,&nbsp;&#39;static&#39;)#指定样式收集目录#或STATIC_ROOT&nbsp;=&nbsp;&#39;/www/mysite/mysite/static&#39;&nbsp;&nbsp;#指定样式收集目录</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">2、收集CSS样式，在终端输入：<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">python&nbsp;manage.py&nbsp;collectstatic</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">运行这个命令之后，就会自动把后台CSS样式收集到/static/目录下。刷新页面就能恢复样式！<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">方法二：</span><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">在Python安装目录下（如果使用虚拟环境，则在虚拟环境目录下）找到\\Lib\\site-packages\\django\\contrib\\admin\\templates目录，把里面的admin目录复制到指定目录即可。<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">注意：收集或复制前一定先在settings里配置并指定STATIC_ROOT路径，static/ 个目录可以自己定。指定的时候一定要在settings.py和nginx里指定新的路径。不然无法生效。<br style=\"box-sizing: border-box; color: inherit;\"/> </p><hr style=\"box-sizing: content-box; color: rgb(62, 69, 76); height: 0px; margin-top: 50px; margin-bottom: 50px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; border-top-style: solid; border-top-color: rgb(222, 222, 222); font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"/><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-size: 18px;\"><span id=\"ssl\" style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Django启用SSL证书(https域名)</span></span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">群里好多朋友都需要使用SSL证书，在使用我这个部署教程的基础上部署SSL证书，总是遇到不少坑。在这，我在这补充一下安装SSL证书的方法，供大家参考。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">1、进入之前我们下载nginx的源码目录</p><pre class=\"brush:bash;toolbar:false hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">cd&nbsp;/home/nginx-1.13.7/</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">2、安装PCRE库</p><pre class=\"hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">yum&nbsp;-y&nbsp;install&nbsp;pcre</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">3、安装SSL<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">yum&nbsp;-y&nbsp;install&nbsp;openssl&nbsp;openssl-devel</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">4、依次执行下面两行代码重新编译一下<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"hljs javascript\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">./configure\r\n\r\n./configure&nbsp;--with-http_ssl_module</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">5、执行<span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">make</span><br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">make</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">注意：是make而不是make install</span><br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">6、备份原来的nginx<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">cp&nbsp;/usr/local/nginx/sbin/nginx&nbsp;/usr/local/nginx/sbin/nginx.bak</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">7、将新的 nginx 覆盖旧安装目录</p><pre class=\"hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">cp&nbsp;objs/nginx&nbsp;/usr/local/nginx/sbin/nginx</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">如果报错，刚用执行下面的命令覆盖<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">cp&nbsp;-rfp&nbsp;objs/nginx&nbsp;/usr/local/nginx/sbin/nginx</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">8、免费证书下载后有两个文件。（以阿里云免费证书为例）一个是扩展名为.pem的文件，一个是扩展名为.key的文件。.pem文件中已经包含服务器证书和CA中间证书，第一段为服务器证书，第二段为CA中间证书，您可以使用文本编辑器自行提取。.key文件是证书私钥。这里我们直接把域名证书复制到网站根目录里去就行。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">9、配置nginx.conf文件。<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">events&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;worker_connections&nbsp;&nbsp;1024;\r\n}http&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mime.types;\r\n&nbsp;&nbsp;&nbsp;&nbsp;default_type&nbsp;&nbsp;application/octet-stream;\r\n&nbsp;&nbsp;&nbsp;&nbsp;sendfile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on;\r\n&nbsp;&nbsp;&nbsp;&nbsp;server&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listen&nbsp;443&nbsp;ssl&nbsp;http2;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server_name&nbsp;www.django.cn&nbsp;django.cn;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;/data/wwwroot/mysite;#项目路径&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;charset&nbsp;utf-8;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ssl_certificate&nbsp;&nbsp;&nbsp;&nbsp;/data/wwwroot/mysite/1_www.django.cn.pem;#.pem证书路径&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ssl_certificate_key&nbsp;&nbsp;/data/wwwroot/mysite/2_www.django.cn.key;#.key证书路径&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ssl_protocols&nbsp;TLSv1&nbsp;TLSv1.1&nbsp;TLSv1.2;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ssl_ciphers&nbsp;ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ssl_prefer_server_ciphers&nbsp;on;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ssl_session_cache&nbsp;shared:SSL:10m;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ssl_session_timeout&nbsp;10m;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error_page&nbsp;497&nbsp;&nbsp;https://$host$request_uri;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;uwsgi_params;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uwsgi_pass&nbsp;127.0.0.1:8997;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uwsgi_param&nbsp;UWSGI_SCRIPT&nbsp;wechatProject.wsgi;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uwsgi_param&nbsp;UWSGI_CHDIR&nbsp;/data/wwwroot/mysite/;#项目路径&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/static/&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;/data/wwwroot/mysite/static/;&nbsp;#静态资源路径&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_log&nbsp;&nbsp;/data/wwwroot/mysite/www.django.cn.log;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error_log&nbsp;&nbsp;/data/wwwroot/mysite/www.django.cn.error.log;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">留意证书的路径，我们主要是把原来的80端口，修改成443，然后再加一些SSL证书配置，大家可以和前面的nginx的配置进行对比一下。<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">10、测试配置文件是否正确</p><pre class=\"brush:bash;toolbar:false hljs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">/usr/local/nginx/sbin/nginx&nbsp;-t</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">如果没有报错则重启nginx即可。</p><pre class=\"hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">/usr/local/nginx/sbin/nginx&nbsp;-s&nbsp;reload</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">留意：</span>使用https时，要开启服务器的443端口，如果开启了服务器还不能访问，可能需要到服务器提供商后台安全组给端口放行。</p><hr style=\"box-sizing: content-box; color: rgb(62, 69, 76); height: 0px; margin-top: 50px; margin-bottom: 50px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; border-top-style: solid; border-top-color: rgb(222, 222, 222); font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"/><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-size: 18px;\"><span id=\"duo\" style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Django多站点部署</span></span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">有的时候我们一台服务器需要部署多个项目，那么我们应该怎么部署呢？</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">1、进入Nginx的配置文件目录/usr/local/nginx/conf/，然后新建一个目录：<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">mkdir&nbsp;vhost</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">之后在vhost目录里建立两个以.conf结尾的文件（有几个项目就放几个），里面的内容如下：</p><pre class=\"brush:bash;toolbar:false hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">server&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;listen&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;80;\r\n&nbsp;&nbsp;&nbsp;&nbsp;server_name&nbsp;&nbsp;www.django.cn;\r\n&nbsp;&nbsp;&nbsp;&nbsp;charset&nbsp;utf-8;\r\n&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;uwsgi_params;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uwsgi_pass&nbsp;127.0.0.1:8997;&nbsp;&nbsp;#端口要和uwsgi里配置的一样&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uwsgi_param&nbsp;UWSGI_SCRIPT&nbsp;mysite.wsgi;&nbsp;&nbsp;#wsgi.py所在的目录名+.wsgi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uwsgi_param&nbsp;UWSGI_CHDIR&nbsp;/data/wwwroot/mysite/;&nbsp;#项目路径&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;/static/&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alias&nbsp;/data/wwwroot/mysite/static/;&nbsp;#静态资源路径&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">项目路径、端口、静态资源与所属项目对应好。<span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">注意：</span></span>项目里的uwsgi端口不能与另一个项目重复。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">2、/usr/local/nginx/conf/目录下的原来默认的nginx.conf文件，先备份一下，然后把里面的代码删除，修改成如下代码：</p><pre class=\"brush:bash;toolbar:false hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">events&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;worker_connections&nbsp;&nbsp;1024;\r\n}http&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mime.types;\r\n&nbsp;&nbsp;&nbsp;&nbsp;default_type&nbsp;&nbsp;application/octet-stream;\r\n&nbsp;&nbsp;&nbsp;&nbsp;sendfile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on;\r\n&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;/usr/local/nginx/conf/vhost/*.conf;#主要是这个地方，把新建的两配置文件包含进来&nbsp;&nbsp;&nbsp;&nbsp;server&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listen&nbsp;80&nbsp;default_server;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server_name&nbsp;_;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;404;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">3、新建立一个虚拟环境，把<span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">新项目</span>上传到到服务器。进入虚拟环境，在新的虚拟环境再装一次uwsgi，和安装项目所需依赖包，然后在项目根目录新建立一个uwsgi配置文件，里面的<span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">端口和配置文件名</span>不要和其它项目相同，路径换成自己的项目路径。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">4、在虚拟环境启动uwsgi，重启Nginx，就能成功访问。哪个项目不能访问，就把原来的uwsgi进行杀死，然后再进入对应虚拟环境，启动uwsgi即可。</p><hr style=\"box-sizing: content-box; color: rgb(62, 69, 76); height: 0px; margin-top: 50px; margin-bottom: 50px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; border-top-style: solid; border-top-color: rgb(222, 222, 222); font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"/><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">关于CentOS防火墙端口打开的方法：</span></span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">有些服务器外网默认是无法访问的，因为防火墙不允许，所以要开启防火墙，让其可以访问需要访问的端口号。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">1、运行命令：<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs cs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">firewall-cmd&nbsp;--get-active-zones</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">运行完成之后，可以看到zone名称。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">2、执行下面命令打开需要打开的端口，以80端口为例<br style=\"box-sizing: border-box; color: inherit;\"/> </p><pre class=\"brush:bash;toolbar:false hljs cs\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">firewall-cmd&nbsp;--zone=public&nbsp;--add-port=80/tcp&nbsp;--permanent</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(36, 39, 41); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">3、重启防火墙</span></p><pre class=\"brush:bash;toolbar:false hljs sql\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">firewall-cmd&nbsp;--reload</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(36, 39, 41); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">4、查看端口号是否开启</span></p><pre class=\"brush:bash;toolbar:false hljs sql\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 0px 0px 0px 1px; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-top-color: initial; border-right-color: initial; border-bottom-color: initial; border-left-color: rgb(174, 200, 218); border-image: initial; border-radius: 0px; vertical-align: baseline; position: relative; clear: left; letter-spacing: 0.3px; word-spacing: 1px;\">firewall-cmd&nbsp;--query-port=80/tcp</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">有些服务器在防火墙里开启端口之后还不能访问，那就需要到对应的服务器提供商的管理后台安全组里开启对应的端口才能正常访问。<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">如果还有其它疑问，大家可以在文章后面留言，也可以加QQ群10218442讨论。本教程会持续更新！<br style=\"box-sizing: border-box; color: inherit;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">更多关于其它服务器部署Django的，请查看下面的文章：</p><h3 style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 0px 0px 1em; font-size: 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><a href=\"https://www.django.cn/article/show-4.html\" target=\"_blank\" title=\"CentOS7下部署Django项目详细操作步骤\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">CentOS7下部署Django项目详细操作步骤</a></h3><h3 style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 0px 0px 1em; font-size: 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><a href=\"https://www.django.cn/article/show-21.html\" target=\"_blank\" title=\"Windows&nbsp;server&nbsp;iis部署Django详细操作\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">Windows&nbsp;server&nbsp;iis部署Django详细操作</a></h3><h3 style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 0px 0px 1em; font-size: 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><a href=\"https://www.django.cn/article/show-22.html\" target=\"_blank\" title=\"用Ubuntu部署Django项目详解方法\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">Ubuntu部署Django项目方法详解</a></h3><p><br/> </p>', '525', '0', '2019-11-24 14:35:39.925167', '2019-12-02 16:49:35.416336', '3', null, '4', 'article/2019/12/module1_2.jpg');
INSERT INTO `blog_article` VALUES ('3', 'Django REST Framework教程:请求和响应', null, '<p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">从现在开始，我们将真正开始接触REST框架的核心。 我们来介绍几个基本的构建模块。</p><h2 id=\"request-objects\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">请求对象（Request objects）</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">REST框架引入了一个扩展了常规<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">HttpRequest</code>的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">Request</code>对象，并提供了更灵活的请求解析。<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">Request</code>对象的核心功能是<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">request.data</code>属性，它与<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">request.POST</code>类似，但对于使用Web API更为有用。</p><pre class=\"prettyprint well hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">request.POST&nbsp;&nbsp;#&nbsp;只处理表单数据&nbsp;&nbsp;只适用于&#39;POST&#39;方法request.data&nbsp;&nbsp;#&nbsp;处理任意数据&nbsp;&nbsp;适用于&#39;POST&#39;，&#39;PUT&#39;和&#39;PATCH&#39;方法</pre><h2 id=\"response-objects\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">响应对象（Response objects）</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">REST框架还引入了一个<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">Response</code>对象，这是一种获取未渲染（unrendered）内容的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">TemplateResponse</code>类型，并使用内容协商来确定返回给客户端的正确内容类型。</p><pre class=\"prettyprint well hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">return&nbsp;Response(data)&nbsp;&nbsp;#&nbsp;渲染成客户端请求的内容类型。</pre><h2 id=\"status-codes\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">状态码（Status codes）</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">在你的视图（views）中使用纯数字的HTTP 状态码并不总是那么容易被理解。而且如果错误代码出错，很容易被忽略。REST框架为<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">status</code>模块中的每个状态代码（如<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">HTTP_400_BAD_REQUEST</code>）提供更明确的标识符。使用它们来代替纯数字的HTTP状态码是个很好的主意。</p><h2 id=\"wrappingapi\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">包装（wrapping）API视图</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">REST框架提供了两个可用于编写API视图的包装器（wrappers）。</p><ol class=\" list-paddingleft-2\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-bottom: 1.5em; margin-left: 2em; padding: 0px; border: 0px; vertical-align: baseline; list-style-position: initial; list-style-image: initial; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><li><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">用于基于函数视图的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">@api_view</code>装饰器。</p></li><li><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">用于基于类视图的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">APIView</code>类。</p></li></ol><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">这些包装器提供了一些功能，例如确保你在视图中接收到<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">Request</code>实例，并将上下文添加到<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">Response</code>，以便可以执行内容协商。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">包装器还提供了诸如在适当时候返回<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">405 Method Not Allowed</code>响应，并处理在使用格式错误的输入来访问<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">request.data</code>时发生的任何<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">ParseError</code>异常。</p><h2 id=\"_1\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">组合在一起</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">好的，我们开始使用这些新的组件来写几个视图。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们在<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">views.py</code>中不再需要<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">JSONResponse</code>类了，所以把它删除掉。删除之后，我们就可以开始重构我们的视图了。</p><pre class=\"prettyprint well hljs python\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">from&nbsp;rest_framework&nbsp;import&nbsp;statusfrom&nbsp;rest_framework.decorators&nbsp;import&nbsp;api_viewfrom&nbsp;rest_framework.response&nbsp;import&nbsp;Responsefrom&nbsp;snippets.models&nbsp;import&nbsp;Snippetfrom&nbsp;snippets.serializers&nbsp;import&nbsp;SnippetSerializer@api_view([&#39;GET&#39;,&nbsp;&#39;POST&#39;])def&nbsp;snippet_list(request):&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;列出所有的snippets，或者创建一个新的snippet。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snippets&nbsp;=&nbsp;Snippet.objects.all()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializer&nbsp;=&nbsp;SnippetSerializer(snippets,&nbsp;many=True)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Response(serializer.data)\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;elif&nbsp;request.method&nbsp;==&nbsp;&#39;POST&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializer&nbsp;=&nbsp;SnippetSerializer(data=request.data)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;serializer.is_valid():\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializer.save()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Response(serializer.data,&nbsp;status=status.HTTP_201_CREATED)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Response(serializer.errors,&nbsp;status=status.HTTP_400_BAD_REQUEST)</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们的实例视图比前面的示例有所改进。它稍微简洁一点，现在的代码与我们使用Forms API时非常相似。我们还使用了命名状态代码，这使得响应意义更加明显。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">以下是<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">views.py</code>模块中单个snippet的视图。</p><pre class=\"prettyprint well hljs python\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">@api_view([&#39;GET&#39;,&nbsp;&#39;PUT&#39;,&nbsp;&#39;DELETE&#39;])def&nbsp;snippet_detail(request,&nbsp;pk):&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;获取，更新或删除一个snippet实例。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;&nbsp;&nbsp;&nbsp;&nbsp;try:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snippet&nbsp;=&nbsp;Snippet.objects.get(pk=pk)\r\n&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;Snippet.DoesNotExist:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Response(status=status.HTTP_404_NOT_FOUND)\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;==&nbsp;&#39;GET&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializer&nbsp;=&nbsp;SnippetSerializer(snippet)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Response(serializer.data)\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;elif&nbsp;request.method&nbsp;==&nbsp;&#39;PUT&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializer&nbsp;=&nbsp;SnippetSerializer(snippet,&nbsp;data=request.data)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;serializer.is_valid():\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializer.save()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Response(serializer.data)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Response(serializer.errors,&nbsp;status=status.HTTP_400_BAD_REQUEST)\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;elif&nbsp;request.method&nbsp;==&nbsp;&#39;DELETE&#39;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snippet.delete()\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Response(status=status.HTTP_204_NO_CONTENT)</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">这对我们来说应该都是非常熟悉的，-它和正常Django视图并没有什么不同。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">注意，我们不再显式地将请求或响应绑定到给定的内容类型。<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">request.data</code>可以处理传入的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">json</code>请求，但它也可以处理其他格式。同样，我们返回带有数据的响应对象，但允许REST框架将响应给我们渲染成正确的内容类型。</p><h2 id=\"_2\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">给我们的网址添加可选的格式后缀</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">为了充分利用我们的响应不再与单一内容类型连接，我们可以为API路径添加对格式后缀的支持。使用格式后缀给我们明确指定了给定格式的URL，这意味着我们的API将能够处理诸如<a href=\"http://example.com/api/items/4.json\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">http://example.com/api/items/4.json</a>之类的URL。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">像下面这样在这两个视图中添加一个<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">format</code>关键字参数。</p><pre class=\"prettyprint well hljs python\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">def&nbsp;snippet_list(request,&nbsp;format=None):</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">和</p><pre class=\"prettyprint well hljs python\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">def&nbsp;snippet_detail(request,&nbsp;pk,&nbsp;format=None):</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">现在更新<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">urls.py</code>文件，给现有的URL后面添加一组<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">format_suffix_patterns</code>。</p><pre class=\"prettyprint well hljs python\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">from&nbsp;django.conf.urls&nbsp;import&nbsp;urlfrom&nbsp;rest_framework.urlpatterns&nbsp;import&nbsp;format_suffix_patternsfrom&nbsp;snippets&nbsp;import&nbsp;views\r\n\r\nurlpatterns&nbsp;=&nbsp;[\r\n&nbsp;&nbsp;&nbsp;&nbsp;url(r&#39;^snippets/$&#39;,&nbsp;views.snippet_list),\r\n&nbsp;&nbsp;&nbsp;&nbsp;url(r&#39;^snippets/(?P&lt;pk&gt;[0-9]+)$&#39;,&nbsp;views.snippet_detail),\r\n]\r\n\r\nurlpatterns&nbsp;=&nbsp;format_suffix_patterns(urlpatterns)</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们不一定需要添加这些额外的url模式，但它给了我们一个简单，清晰的方式来引用特定的格式。</p><h2 id=\"_3\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">怎么查看结果？</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">从命令行开始测试API，就像我们在<a href=\"https://www.django.cn/course/show-21.html\" target=\"_self\" textvalue=\"教程第一部分\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">教程第一部分</a>中所做的那样。一切操作都很相似，尽管我们发送无效的请求也会有一些更好的错误处理了。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们可以像以前一样获取所有snippet的列表。</p><pre class=\"prettyprint well hljs ruby\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">http&nbsp;http://127.0.0.1:8000/snippets/HTTP/1.1&nbsp;200&nbsp;OK...[\r\n&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;1,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;title&quot;:&nbsp;&quot;&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;code&quot;:&nbsp;&quot;foo&nbsp;=&nbsp;\\&quot;bar\\&quot;\\n&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;linenos&quot;:&nbsp;false,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;language&quot;:&nbsp;&quot;python&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;style&quot;:&nbsp;&quot;friendly&quot;&nbsp;&nbsp;},\r\n&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;2,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;title&quot;:&nbsp;&quot;&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;code&quot;:&nbsp;&quot;print&nbsp;\\&quot;hello,&nbsp;world\\&quot;\\n&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;linenos&quot;:&nbsp;false,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;language&quot;:&nbsp;&quot;python&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;style&quot;:&nbsp;&quot;friendly&quot;&nbsp;&nbsp;}]</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们可以通过使用<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">Accept</code>标头来控制我们回复的响应格式：</p><pre class=\"prettyprint well hljs ruby\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">http&nbsp;http://127.0.0.1:8000/snippets/&nbsp;Accept:application/json&nbsp;&nbsp;#&nbsp;请求JSONhttp&nbsp;http://127.0.0.1:8000/snippets/&nbsp;Accept:text/html&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;请求HTML</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">或者通过附加格式后缀：</p><pre class=\"prettyprint well hljs nginx\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">http&nbsp;http://127.0.0.1:8000/snippets.json&nbsp;&nbsp;#&nbsp;JSON后缀http&nbsp;http://127.0.0.1:8000/snippets.api&nbsp;&nbsp;&nbsp;#&nbsp;浏览器可浏览API后缀</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">类似地，我们可以使用<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">Content-Type</code>头控制我们发送的请求的格式。</p><pre class=\"prettyprint well hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">#&nbsp;POST表单数据http&nbsp;--form&nbsp;POST&nbsp;http://127.0.0.1:8000/snippets/&nbsp;code=&quot;print&nbsp;123&quot;{\r\n&nbsp;&nbsp;&quot;id&quot;:&nbsp;3,\r\n&nbsp;&nbsp;&quot;title&quot;:&nbsp;&quot;&quot;,\r\n&nbsp;&nbsp;&quot;code&quot;:&nbsp;&quot;print&nbsp;123&quot;,\r\n&nbsp;&nbsp;&quot;linenos&quot;:&nbsp;false,\r\n&nbsp;&nbsp;&quot;language&quot;:&nbsp;&quot;python&quot;,\r\n&nbsp;&nbsp;&quot;style&quot;:&nbsp;&quot;friendly&quot;}#&nbsp;POST&nbsp;JSON数据http&nbsp;--json&nbsp;POST&nbsp;http://127.0.0.1:8000/snippets/&nbsp;code=&quot;print&nbsp;456&quot;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;4,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;title&quot;:&nbsp;&quot;&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;code&quot;:&nbsp;&quot;print&nbsp;456&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;linenos&quot;:&nbsp;false,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;language&quot;:&nbsp;&quot;python&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;style&quot;:&nbsp;&quot;friendly&quot;}</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">如果你向上述<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">http</code>请求添加了<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">--debug</code>，则可以在请求标头中查看请求类型。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">现在可以在浏览器中访问http://127.0.0.1:8000/snippets/查看API。</p><h3 id=\"_4\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 0px 0px 1em; font-size: 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">浏览功能</h3><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">由于API根据客户端请求选择响应的内容类型，因此默认情况下，当Web浏览器请求该资源时，它将返回资源的HTML格式表示。这允许API返回完全浏览器可浏览（web-browsable）的HTML表示。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">拥有支持浏览器可浏览的API在可用性方面完胜并使开发和使用你的API更容易。它也大大降低了其他开发人员要检查和使用API的障碍。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">有关支持浏览器可浏览的API功能以及如何自定义API的更多信息，请参阅可浏览的api主题。</p><p><br/> </p>', '1', '0', '2019-11-24 14:43:30.626529', '2019-12-02 16:19:12.142997', '3', null, '4', 'article/2019/12/companydes.jpg');
INSERT INTO `blog_article` VALUES ('4', 'Django REST Framework教程:认证和权限', null, '<p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">目前，我们的API对谁可以编辑或删除代码段没有任何限制。我们希望有更高级的行为，以确保：</p><ul class=\" list-paddingleft-2\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-bottom: 1.5em; margin-left: 2em; padding: 0px; border: 0px; vertical-align: baseline; list-style-position: initial; list-style-image: initial; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><li><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">代码片段始终与创建者相关联。</p></li><li><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">只有通过身份验证的用户可以创建片段。</p></li><li><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">只有代码片段的创建者可以更新或删除它。</p></li><li><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">未经身份验证的请求应具有完全只读访问权限。</p></li></ul><h2 id=\"model\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">在我们的模型（model）中添加信息</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们将对我们的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">Snippet</code>模型类进行几次更改。首先，我们添加几个字段。其中一个字段将用于表示创建代码段的用户，另一个字段将用于存储代码的高亮显示的HTML内容。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">将以下两个字段添加到<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">models.py</code>文件中的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">Snippet</code>模型中。</p><pre class=\"prettyprint well hljs ini\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">owner&nbsp;=&nbsp;models.ForeignKey(&#39;auth.User&#39;,&nbsp;related_name=&#39;snippets&#39;,&nbsp;on_delete=models.CASCADE)highlighted&nbsp;=&nbsp;models.TextField()</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们还需要确保在保存模型时，使用<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">pygments</code>代码高亮显示库填充要高亮显示的字段。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们需要导入额外的模块：</p><pre class=\"prettyprint well hljs javascript\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">from&nbsp;pygments.lexers&nbsp;import&nbsp;get_lexer_by_namefrom&nbsp;pygments.formatters.html&nbsp;import&nbsp;HtmlFormatterfrom&nbsp;pygments&nbsp;import&nbsp;highlight</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">现在我们可以在我们的模型类中添加一个<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">.save()</code>方法：</p><pre class=\"prettyprint well hljs ruby\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">def&nbsp;save(self,&nbsp;*args,&nbsp;**kwargs):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;使用`pygments`库创建一个高亮显示的HTML表示代码段。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;&nbsp;&nbsp;&nbsp;&nbsp;lexer&nbsp;=&nbsp;get_lexer_by_name(self.language)\r\n&nbsp;&nbsp;&nbsp;&nbsp;linenos&nbsp;=&nbsp;self.linenos&nbsp;and&nbsp;&#39;table&#39;&nbsp;or&nbsp;False\r\n&nbsp;&nbsp;&nbsp;&nbsp;options&nbsp;=&nbsp;self.title&nbsp;and&nbsp;{&#39;title&#39;:&nbsp;self.title}&nbsp;or&nbsp;{}\r\n&nbsp;&nbsp;&nbsp;&nbsp;formatter&nbsp;=&nbsp;HtmlFormatter(style=self.style,&nbsp;linenos=linenos,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;full=True,&nbsp;**options)\r\n&nbsp;&nbsp;&nbsp;&nbsp;self.highlighted&nbsp;=&nbsp;highlight(self.code,&nbsp;lexer,&nbsp;formatter)\r\n&nbsp;&nbsp;&nbsp;&nbsp;super(Snippet,&nbsp;self).save(*args,&nbsp;**kwargs)</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">完成这些工作后，我们需要更新我们的数据库表。 通常这种情况我们会创建一个数据库迁移（migration）来实现这一点，但现在我们只是个教程示例，所以我们选择直接删除数据库并重新开始。</p><pre class=\"prettyprint well hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">rm&nbsp;-f&nbsp;tmp.db&nbsp;db.sqlite3\r\nrm&nbsp;-r&nbsp;snippets/migrations\r\npython&nbsp;manage.py&nbsp;makemigrations&nbsp;snippets\r\npython&nbsp;manage.py&nbsp;migrate</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">你可能还需要创建几个不同的用户，以用于测试API。最快的方法是使用<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">createsuperuser</code>命令。</p><pre class=\"prettyprint well hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">python&nbsp;manage.py&nbsp;createsuperuser</pre><h2 id=\"_1\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">为我们的用户模型添加路径</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">现在我们已经创建了一些用户，我们最好在API中添加这些用户的表示。创建一个新的序列化器非常简单，在<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">serializers.py</code>文件中添加：</p><pre class=\"prettyprint well hljs python\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">from&nbsp;django.contrib.auth.models&nbsp;import&nbsp;Userclass&nbsp;UserSerializer(serializers.ModelSerializer):&nbsp;&nbsp;&nbsp;&nbsp;snippets&nbsp;=&nbsp;serializers.PrimaryKeyRelatedField(many=True,&nbsp;queryset=Snippet.objects.all())\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Meta:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model&nbsp;=&nbsp;User\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fields&nbsp;=&nbsp;(&#39;id&#39;,&nbsp;&#39;username&#39;,&nbsp;&#39;snippets&#39;)</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">因为<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">&#39;snippets&#39;</code>&nbsp;在用户模型中是一个<em style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">反向</em>关联关系。在使用&nbsp;<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">ModelSerializer</code>&nbsp;类时它默认不会被包含，所以我们需要为它添加一个显式字段。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们还会在<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">views.py</code>中添加几个视图。我们只想将用户展示为只读视图，因此我们将使用<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">ListAPIView</code>和<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">RetrieveAPIView</code>通用的基于类的视图。</p><pre class=\"prettyprint well hljs python\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">from&nbsp;django.contrib.auth.models&nbsp;import&nbsp;Userclass&nbsp;UserList(generics.ListAPIView):&nbsp;&nbsp;&nbsp;&nbsp;queryset&nbsp;=&nbsp;User.objects.all()\r\n&nbsp;&nbsp;&nbsp;&nbsp;serializer_class&nbsp;=&nbsp;UserSerializerclass&nbsp;UserDetail(generics.RetrieveAPIView):&nbsp;&nbsp;&nbsp;&nbsp;queryset&nbsp;=&nbsp;User.objects.all()\r\n&nbsp;&nbsp;&nbsp;&nbsp;serializer_class&nbsp;=&nbsp;UserSerializer</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">确保导入了<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">UserSerializer</code>类</p><pre class=\"prettyprint well hljs javascript\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">from&nbsp;snippets.serializers&nbsp;import&nbsp;UserSerializer</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">最后，我们需要通过在URL conf中引用它们来将这些视图添加到API中。将以下内容添加到<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">urls.py</code>文件的patterns中。</p><pre class=\"prettyprint well hljs python\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">url(r&#39;^users/$&#39;,&nbsp;views.UserList.as_view()),\r\nurl(r&#39;^users/(?P&lt;pk&gt;[0-9]+)/$&#39;,&nbsp;views.UserDetail.as_view()),</pre><h2 id=\"snippet\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">将Snippet和用户关联</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">现在，如果我们创建了一个代码片段，并不能将创建该代码片段的用户与代码段实例相关联。用户不是作为序列化表示的一部分发送的，而是作为传入请求的属性。（译者注：user不在传过来的数据中，而是通过request.user获得）</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们处理的方式是在我们的代码片段视图中重写一个<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">.perform_create()</code>方法，这样我们可以修改实例保存的方法，并处理传入请求或请求URL中隐含的任何信息。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">在<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">SnippetList</code>视图类中，添加以下方法：</p><pre class=\"prettyprint well hljs ruby\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">def&nbsp;perform_create(self,&nbsp;serializer):\r\n&nbsp;&nbsp;&nbsp;&nbsp;serializer.save(owner=self.request.user)</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们的序列化器的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">create()</code>方法现在将被传递一个附加的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">&#39;owner&#39;</code>字段以及来自请求的验证数据。</p><h2 id=\"_2\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">更新我们的序列化器</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">现在，这些代码片段和创建它们的用户相关联，让我们更新我们的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">SnippetSerializer</code>来体现这个关联关系。将以下字段添加到<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">serializers.py</code>中的序列化器定义： Add the following field to the serializer definition in&nbsp;<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">serializers.py</code>:</p><pre class=\"prettyprint well hljs ini\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">owner&nbsp;=&nbsp;serializers.ReadOnlyField(source=&#39;owner.username&#39;)</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">注意</span>：确保你还将<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">&#39;owner&#39;,</code>添加到内部<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">Meta</code>类的字段列表中。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">这个字段非常有趣。<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">source</code>参数控制哪个属性用于填充字段，并且可以指向序列化实例上的任何属性。它也可以采用如上所示点加下划线的方式，在这种情况下，它将以与Django模板语言一起使用的相似方式遍历给定的属性。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们添加的字段是无类型的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">ReadOnlyField</code>类，区别于其他类型的字段（如<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">CharField</code>，<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">BooleanField</code>等）。无类型的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">ReadOnlyField</code>始终是只读的，只能用于序列化表示，不能用于在反序列化时更新模型实例。我们也可以在这里使用<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">CharField(read_only=True)</code>。</p><h2 id=\"_3\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">添加视图所需的权限</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">现在，代码片段与用户是相关联的，我们希望确保只有经过身份验证的用户才能创建，更新和删除代码片段。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">REST框架包括许多权限类，我们可以使用这些权限类来限制谁可以访问给定的视图。 在这种情况下，我们需要的是<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">IsAuthenticatedOrReadOnly</code>类，这将确保经过身份验证的请求获得读写访问权限，未经身份验证的请求将获得只读访问权限。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">首先要在视图模块中导入以下内容</p><pre class=\"prettyprint well hljs javascript\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">from&nbsp;rest_framework&nbsp;import&nbsp;permissions</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">然后，将以下属性添加到<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">SnippetList</code><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">和</span><code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">SnippetDetail</code>视图类中。</p><pre class=\"prettyprint well hljs ini\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">permission_classes&nbsp;=&nbsp;(permissions.IsAuthenticatedOrReadOnly,)</pre><h2 id=\"browsable-api\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">给Browsable API添加登陆</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">如果你打开浏览器并浏览我们的API，那么你会发现不能创建新的代码片段。只有登陆用户才能创建新的代码片段。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们可以通过编辑项目级别的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">urls.py</code>文件中的URLconf来添加可浏览的API使用的登录视图。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">在文件顶部添加以下导入：</p><pre class=\"prettyprint well hljs css\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">from&nbsp;django.conf.urls&nbsp;import&nbsp;include</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">而且，在文件末尾添加一个模式（pattern）以包括可浏览的API的登录和注销视图。</p><pre class=\"prettyprint well hljs python\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">urlpatterns&nbsp;+=&nbsp;[\r\n&nbsp;&nbsp;&nbsp;&nbsp;url(r&#39;^api-auth/&#39;,&nbsp;include(&#39;rest_framework.urls&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namespace=&#39;rest_framework&#39;)),\r\n]</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">模式的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">r&#39;^api-auth/&#39;</code>部分实际上可以是你要使用的任何URL。唯一的限制是包含的URL必须使用<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">&#39;rest_framework&#39;</code>命名空间。在Django 1.9以上的版本中，REST框架将设置命名空间，因此你可以将其删除。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">现在，如果你再次打开浏览器并刷新页面，你将在页面右上角看到一个“登录”链接。如果你用早期创建的用户登录，就可以再次创建代码片段。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">一旦你创建了一些代码片段后，在&#39;/users/&#39;路径下你会注意到每个用户的&#39;snippets&#39;字段都包含与每个用户相关联的代码片段的列表。</p><h2 id=\"_4\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">对象级别的权限</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们希望所有的代码片段都可以被任何人看到，但也要确保只有创建代码片段的用户才能更新或删除它。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">为此，我们将需要创建一个自定义权限。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">在snippets app中，创建一个新文件<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">permissions.py</code>。</p><pre class=\"prettyprint well hljs python\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">from&nbsp;rest_framework&nbsp;import&nbsp;permissionsclass&nbsp;IsOwnerOrReadOnly(permissions.BasePermission):&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;自定义权限只允许对象的所有者编辑它。\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;has_object_permission(self,&nbsp;request,&nbsp;view,&nbsp;obj):&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;读取权限允许任何请求，&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;所以我们总是允许GET，HEAD或OPTIONS请求。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;request.method&nbsp;in&nbsp;permissions.SAFE_METHODS:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;只有该snippet的所有者才允许写权限。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;obj.owner&nbsp;==&nbsp;request.user</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">现在，我们可以通过在<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">SnippetDetail</code>视图类中编辑<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">permission_classes</code>属性将该自定义权限添加到我们的代码片段实例路径：</p><pre class=\"prettyprint well hljs makefile\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">permission_classes&nbsp;=&nbsp;(permissions.IsAuthenticatedOrReadOnly,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IsOwnerOrReadOnly,)</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">确保要先导入<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">IsOwnerOrReadOnly</code>类。</p><pre class=\"prettyprint well hljs javascript\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">from&nbsp;snippets.permissions&nbsp;import&nbsp;IsOwnerOrReadOnly</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">现在，如果再次打开浏览器，你会发现如果你以代码片段创建者的身份登录的话，“DELETE”和“PUT”操作才会显示在代码片段实例路径上。</p><h2 id=\"api\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">使用API进行身份验证</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">现在因为我们在API上有一组权限，如果我们要编辑任何代码片段，我们都需要验证我们的请求。我们还没有设置任何身份验证类，所以应用的是默认的<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">SessionAuthentication</code>和<code style=\"box-sizing: border-box; color: rgb(80, 80, 80); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 0.8em; padding: 0.2em 0.4em; background-color: rgb(242, 242, 242); border-radius: 3px;\">BasicAuthentication</code>。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">当我们通过Web浏览器与API进行交互时，我们可以登录，然后浏览器会话将为请求提供所需的身份验证。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">如果我们在代码中与API交互，我们需要在每次请求上显式提供身份验证凭据。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">如果我们通过没有验证就尝试创建一个代码片段，我们会像下面展示的那样收到报错：</p><pre class=\"prettyprint well hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">http&nbsp;POST&nbsp;http://127.0.0.1:8000/snippets/&nbsp;code=&quot;print&nbsp;123&quot;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;detail&quot;:&nbsp;&quot;Authentication&nbsp;credentials&nbsp;were&nbsp;not&nbsp;provided.&quot;}</pre><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们可以通过加上我们之前创建的一个用户的用户名和密码来成功创建：</p><pre class=\"prettyprint well hljs bash\" style=\"box-sizing: border-box; color: rgb(25, 25, 25); overflow: auto; font-family: inconsolata, monospace; font-size: 12px; padding: 0.5em 0.5em 0.5em 15px; margin-top: 20px; margin-bottom: 20px; line-height: 1.45; word-break: break-all; overflow-wrap: normal; background-color: rgb(250, 250, 250); border-width: 1px; border-style: solid; border-color: rgb(227, 227, 227) rgb(227, 227, 227) rgb(227, 227, 227) rgb(174, 200, 218); border-image: initial; border-radius: 3px; vertical-align: baseline; position: relative; clear: left; min-height: 20px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; letter-spacing: 0.3px; word-spacing: 1px;\">http&nbsp;-a&nbsp;tom:password123&nbsp;POST&nbsp;http://127.0.0.1:8000/snippets/&nbsp;code=&quot;print&nbsp;789&quot;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;5,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;owner&quot;:&nbsp;&quot;tom&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;title&quot;:&nbsp;&quot;foo&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;code&quot;:&nbsp;&quot;print&nbsp;789&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;linenos&quot;:&nbsp;false,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;language&quot;:&nbsp;&quot;python&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;style&quot;:&nbsp;&quot;friendly&quot;}</pre><h2 id=\"_5\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">总结</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我们现在已经在我们的Web API上获得了相当精细的一组权限控制，并为系统的用户和他们创建的代码片段提供了API路径。</p><p><br/> </p>', '980', '0', '2019-11-24 14:44:21.779146', '2019-12-02 16:17:37.579976', '3', null, '4', 'article/2019/12/default.jpg');

-- ----------------------------
-- Table structure for blog_articleresource
-- ----------------------------
DROP TABLE IF EXISTS `blog_articleresource`;
CREATE TABLE `blog_articleresource` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `download` varchar(100) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `article_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_articleresource_article_id_c9568232_fk_blog_article_id` (`article_id`),
  CONSTRAINT `blog_articleresource_article_id_c9568232_fk_blog_article_id` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_articleresource
-- ----------------------------

-- ----------------------------
-- Table structure for blog_article_section
-- ----------------------------
DROP TABLE IF EXISTS `blog_article_section`;
CREATE TABLE `blog_article_section` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `section_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `blog_article_section_article_id_section_id_11b11368_uniq` (`article_id`,`section_id`),
  KEY `blog_article_section_section_id_8d67efa3_fk_blog_section_id` (`section_id`),
  CONSTRAINT `blog_article_section_article_id_8eec80e8_fk_blog_article_id` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`id`),
  CONSTRAINT `blog_article_section_section_id_8d67efa3_fk_blog_section_id` FOREIGN KEY (`section_id`) REFERENCES `blog_section` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_article_section
-- ----------------------------
INSERT INTO `blog_article_section` VALUES ('4', '1', '1');
INSERT INTO `blog_article_section` VALUES ('1', '2', '1');
INSERT INTO `blog_article_section` VALUES ('2', '3', '2');
INSERT INTO `blog_article_section` VALUES ('3', '4', '2');

-- ----------------------------
-- Table structure for blog_article_tag
-- ----------------------------
DROP TABLE IF EXISTS `blog_article_tag`;
CREATE TABLE `blog_article_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `blog_article_tag_article_id_tag_id_818e752b_uniq` (`article_id`,`tag_id`),
  KEY `blog_article_tag_tag_id_f2afe66b_fk_blog_tag_id` (`tag_id`),
  CONSTRAINT `blog_article_tag_article_id_8db2395e_fk_blog_article_id` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`id`),
  CONSTRAINT `blog_article_tag_tag_id_f2afe66b_fk_blog_tag_id` FOREIGN KEY (`tag_id`) REFERENCES `blog_tag` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_article_tag
-- ----------------------------
INSERT INTO `blog_article_tag` VALUES ('1', '1', '5');
INSERT INTO `blog_article_tag` VALUES ('7', '2', '1');
INSERT INTO `blog_article_tag` VALUES ('8', '2', '2');
INSERT INTO `blog_article_tag` VALUES ('9', '2', '3');
INSERT INTO `blog_article_tag` VALUES ('10', '2', '4');
INSERT INTO `blog_article_tag` VALUES ('2', '2', '5');
INSERT INTO `blog_article_tag` VALUES ('3', '3', '2');
INSERT INTO `blog_article_tag` VALUES ('4', '3', '5');
INSERT INTO `blog_article_tag` VALUES ('5', '4', '2');
INSERT INTO `blog_article_tag` VALUES ('6', '4', '5');

-- ----------------------------
-- Table structure for blog_category
-- ----------------------------
DROP TABLE IF EXISTS `blog_category`;
CREATE TABLE `blog_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `desc` longtext NOT NULL,
  `category_type` int(11) NOT NULL,
  `is_tab` tinyint(1) NOT NULL,
  `index` smallint(5) unsigned NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `parent_category_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_category_parent_category_id_f50c3c0c_fk_blog_category_id` (`parent_category_id`),
  CONSTRAINT `blog_category_parent_category_id_f50c3c0c_fk_blog_category_id` FOREIGN KEY (`parent_category_id`) REFERENCES `blog_category` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_category
-- ----------------------------
INSERT INTO `blog_category` VALUES ('1', '后端开发', '后端开发', '1', '0', '999', '2019-11-24 11:22:26.988996', '2019-11-24 11:22:26.988996', null);
INSERT INTO `blog_category` VALUES ('2', '前端开发', '前端开发', '1', '0', '999', '2019-11-24 11:22:53.768666', '2019-11-24 11:22:53.768666', null);
INSERT INTO `blog_category` VALUES ('3', '移动开发', '移动开发', '1', '0', '999', '2019-11-24 11:23:28.584144', '2019-11-24 11:23:28.584144', null);
INSERT INTO `blog_category` VALUES ('4', 'Python', 'Python语言', '2', '0', '999', '2019-11-24 11:23:55.155288', '2019-11-24 11:23:55.155288', '1');
INSERT INTO `blog_category` VALUES ('5', 'Django', 'Django - Python', '2', '0', '999', '2019-11-24 11:24:31.080662', '2019-12-07 11:50:00.385013', '1');
INSERT INTO `blog_category` VALUES ('6', 'spider', 'spider', '2', '0', '999', '2019-11-24 11:25:00.361267', '2019-12-07 11:49:38.462589', '1');

-- ----------------------------
-- Table structure for blog_section
-- ----------------------------
DROP TABLE IF EXISTS `blog_section`;
CREATE TABLE `blog_section` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `tutorial_id` int(11) DEFAULT NULL,
  `index` smallint(5) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_section_tutorial_id_90ea545d_fk_blog_tutorial_id` (`tutorial_id`),
  CONSTRAINT `blog_section_tutorial_id_90ea545d_fk_blog_tutorial_id` FOREIGN KEY (`tutorial_id`) REFERENCES `blog_tutorial` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_section
-- ----------------------------
INSERT INTO `blog_section` VALUES ('1', '环境部署', '2019-11-24 14:12:42.249220', '2019-11-24 14:17:40.235622', '1', '10');
INSERT INTO `blog_section` VALUES ('2', '教程目录', '2019-11-24 14:12:49.747874', '2019-11-24 14:17:51.959636', '1', '20');
INSERT INTO `blog_section` VALUES ('3', '相关推荐', '2019-11-24 14:13:01.098423', '2019-11-24 14:17:57.035786', '1', '30');

-- ----------------------------
-- Table structure for blog_tag
-- ----------------------------
DROP TABLE IF EXISTS `blog_tag`;
CREATE TABLE `blog_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_tag
-- ----------------------------
INSERT INTO `blog_tag` VALUES ('1', 'Restful', '2019-11-24 11:10:09.899773', '2019-11-24 11:10:09.899773');
INSERT INTO `blog_tag` VALUES ('2', 'Django', '2019-11-24 11:10:21.038875', '2019-11-24 11:10:21.038875');
INSERT INTO `blog_tag` VALUES ('3', 'Django Restful Framework', '2019-11-24 11:10:33.858975', '2019-11-24 11:10:33.858975');
INSERT INTO `blog_tag` VALUES ('4', 'DRF', '2019-11-24 11:10:41.595477', '2019-11-24 11:10:41.595477');
INSERT INTO `blog_tag` VALUES ('5', 'Python', '2019-11-24 14:34:33.558128', '2019-11-24 14:34:33.558128');

-- ----------------------------
-- Table structure for blog_tutorial
-- ----------------------------
DROP TABLE IF EXISTS `blog_tutorial`;
CREATE TABLE `blog_tutorial` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `desc` varchar(300) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `category_id` int(11) DEFAULT NULL,
  `click_nums` int(11) NOT NULL,
  `fav_nums` int(11) NOT NULL,
  `image` varchar(200) DEFAULT NULL,
  `detail` longtext NOT NULL,
  `students` int(11) NOT NULL,
  `degree` varchar(2) NOT NULL,
  `tutorial_org_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_tutorial_category_id_99c8b217_fk_blog_category_id` (`category_id`),
  KEY `blog_tutorial_tutorial_org_id_5415f08a_fk_organizat` (`tutorial_org_id`),
  CONSTRAINT `blog_tutorial_category_id_99c8b217_fk_blog_category_id` FOREIGN KEY (`category_id`) REFERENCES `blog_category` (`id`),
  CONSTRAINT `blog_tutorial_tutorial_org_id_5415f08a_fk_organizat` FOREIGN KEY (`tutorial_org_id`) REFERENCES `organization_courseorganization` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_tutorial
-- ----------------------------
INSERT INTO `blog_tutorial` VALUES ('1', 'Django REST Framework教程', '使用Django REST framework（DRF）这个API框架。', '2019-11-24 13:55:41.902935', '2019-12-02 17:50:37.595203', '5', '53', '0', 'course/2019/11/15.jpg', '<p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">现在前后端分离的架构设计越来越流行，业界甚至出现了API优先的趋势。显然API开发已经成为后端程序员的必备技能了，那作为Python程序员特别是把Django作为自己主要的开发框架的程序员，推荐使用Django REST framework（DRF）这个API框架。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://www.django.cn/media/course_img/logo_20180907182604_631.png\" title=\"\" alt=\"logo.png\" style=\"box-sizing: border-box; color: inherit; border: 0px; vertical-align: baseline; margin: 0px auto; padding: 0px; max-width: 100%; height: auto; display: block;\"/> </p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">Django REST framework（DRF）框架文档齐全，社区较稳定，而且由于它是基于Django这个十分全面的框架而设计开发的，能够让开发者根据自己的业务需要，使用极少的代码量快速的开发一套符合RESTful风格的API，并且还支持自动生成API文档。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">Django REST framework（DRF）官网：<a href=\"http://www.django-rest-framework.org/\" target=\"_blank\" textvalue=\"http://www.django-rest-framework.org/\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">http://www.django-rest-framework.org/</a></p><h2 id=\"_1\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); font-family: Nunito, sans-serif; line-height: 1.35; margin: 2em 0px 1em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">版本相关</h2><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">这是Django REST framework v3 版本的中文翻译文档。</p><ul class=\" list-paddingleft-2\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-bottom: 1.5em; margin-left: 2em; padding: 0px; border: 0px; vertical-align: baseline; list-style-position: initial; list-style-image: initial; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><li><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">django-rest-framework版本：</p></li><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><li><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">v3.6.3</p></li></ul><li><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">django版本：</p></li><ul class=\" list-paddingleft-2\" style=\"list-style-type: square;\"><li><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">v1.10.4</p></li></ul></ul><p><br/> </p>', '54', 'cj', '2');
INSERT INTO `blog_tutorial` VALUES ('2', 'Django博客开发教程', '自从Django问世以来，一直受到广大Python爱好者的喜爱，但很多新手总是不能快速入门。本教程目的就是引导新手，让新手通过一个小的项目，快速了解Django，体会到Django的魅力与强大。  在阅读本教程之前，建议阅读一下我们的另一个教程：Django2.0入门教程。这样才使你更快的理解Django和这个教程。', '2019-11-24 14:05:09.780816', '2019-11-24 14:05:09.780816', '5', '0', '0', 'course/2019/11/rumen.jpg', '<p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">自从Django问世以来，一直受到广大Python爱好者的喜爱，但很多新手总是不能快速入门。本教程目的就是引导新手，让新手通过一个小的项目，快速了解Django，体会到Django的魅力与强大。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">在阅读本教程之前，建议阅读一下我们的另一个教程：<a href=\"https://www.django.cn/course/course-1.html\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">Django2.0入门教程</a>。这样才使你更快的理解Django和这个教程。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-size: 20px;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">教程基于Python3.6、Django2.1.1上开发的，开发工具：Pycharm。</span></span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">演示地址：<a href=\"http://demo.django.cn/\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(22, 175, 89); background-color: transparent; text-decoration-line: none; margin: 0px; padding: 0px; border-width: 0px 0px 2px; border-top-style: initial; border-right-style: initial; border-bottom-style: solid; border-left-style: initial; border-top-color: initial; border-right-color: initial; border-bottom-color: rgb(237, 237, 237); border-left-color: initial; border-image: initial; vertical-align: baseline;\">http://demo.django.cn/</a></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">有问题可通过<span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">QQ技术交流群</span>：10218442 一起讨论。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">教程里提到的前端模板页面和源码，教程里只有部分可以下载。希望大家能自己手动敲完，提升对Django的认识。如果跟着教程做完之后，想要源码进行对比，请加微信<span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">VIPdjango</span></span>。加微信时候，请发送验证‘<span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">源码</span>’两字。</p><p><br/></p>', '0', 'cj', null);
INSERT INTO `blog_tutorial` VALUES ('3', 'Django2.0入门教程', 'Django是一个由Python写成的Web应用框架。Django的主要目的是简便、快速的开发数据库驱动的网站。这使得Django具有很强的可扩展性，是PythonWeb应用框架中最具代表性的一个。Django入门教程,主要讲的是Django的基础，让第一次使用它的人快速入门，体验Django的魅力！', '2019-11-24 14:06:29.779346', '2019-11-24 14:06:29.779346', '5', '0', '0', 'course/2019/11/rumen_1.jpg', '<p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">Django是一个由Python写成的Web应用框架。Django的主要目的是简便、快速的开发数据库驱动的网站。这使得Django具有很强的可扩展性，是PythonWeb应用框架中最具代表性的一个。Django入门教程,主要讲的是Django的基础，让第一次使用它的人快速入门，体验Django的魅力！</p><hr style=\"box-sizing: content-box; color: rgb(62, 69, 76); height: 0px; margin-top: 50px; margin-bottom: 50px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-image: initial; border-top-style: solid; border-top-color: rgb(222, 222, 222); font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"/><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"box-sizing: border-box; color: inherit;\"/></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-size: 18px;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">教程软件版本</span></span><br style=\"box-sizing: border-box; color: inherit;\"/></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">入门教程基于最新版<span style=\"box-sizing: border-box; color: rgb(255, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Django2.0</span></span>写的，新版本不再支持python2.7，所以教程是基于<span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: rgb(255, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Django2.0</span></span>和<span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: rgb(255, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">python3.6</span></span>写的！<span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: rgb(0, 176, 80); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">本教程之后将随着新的版本升级而持续更新</span></span><span style=\"box-sizing: border-box; color: rgb(0, 176, 80); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">。</span>如果有问题和建议，可以在本站论坛里发帖子咨询，或者在教程后面评论咨询。当然你也可以加我们的<span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">QQ技术交流群</span>：10218442 一起讨论。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-size: 18px;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">阅读教程所需知识</span></span><br style=\"box-sizing: border-box; color: inherit;\"/></p><ol class=\" list-paddingleft-2\" style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-bottom: 1.5em; margin-left: 2em; padding: 0px; border: 0px; vertical-align: baseline; list-style-position: initial; list-style-image: initial; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><li><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">Django是python语言写的一个Web框架包，所以你得知道一些Python基础知识。</p></li><li><p style=\"box-sizing: border-box; color: inherit; margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5;\">&nbsp;需要掌握基本WEB开发常识，了解一些网页HTML, CSS, JavaScript的知识。</p></li></ol><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\">本教程是入门教程，按教程操作，零基础零经验也一样可以学会。</p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: rgb(192, 0, 0); margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">如果有对教程有建议或者合作，可以通过邮箱：445813@qq.com联系！</span></span><span style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-size: 18px;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><br style=\"box-sizing: border-box; color: inherit;\"/></span></span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: inherit; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; font-size: 18px;\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Django的优点</span></span></p><p style=\"box-sizing: border-box; color: rgb(62, 69, 76); margin-top: 1em; margin-bottom: 1.5em; padding: 0px; border: 0px; vertical-align: baseline; word-break: break-word; line-height: 1.5; font-family: Nunito, sans-serif; font-size: 15.4px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">强大的数据库功能</span><br style=\"box-sizing: border-box; color: inherit;\"/>用 python 的类继承，几行代码就可以拥有一个丰富、动态的数据库操作接口（API），如果需要，你也能执行 SQL 语句ORM（Object-Relational Mapping“对象-关系-映射”），它实现了数据模型与数据库的解耦，即数据模型的设计不需要依赖于特定的数据库，通过简单的配置就可以轻松更换数据库<br style=\"box-sizing: border-box; color: inherit;\"/><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">自带强大的后台功能</span><br style=\"box-sizing: border-box; color: inherit;\"/>在admin.py中写入需要实现功能的代码，几行简单的代码就可以实现你当管理员的梦。再也不用为设计管理员而发愁了！<br style=\"box-sizing: border-box; color: inherit;\"/><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">优雅的网址</span><br style=\"box-sizing: border-box; color: inherit;\"/>在urls.py中用正则匹配网址，传递到对应的函数，随意你自己定义，网址可以如你所想，如你所愿。(需要注意的是:正则是一种独立的语法，并不是哪个语言所拥有的。)<br style=\"box-sizing: border-box; color: inherit;\"/><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">具有模板系统</span><br style=\"box-sizing: border-box; color: inherit;\"/>模板系统大大的降低了开发者头疼脑热的概率。因为模板系统设计简单，容易扩展。代码，样式分开设计。查找更清晰，修改更容易！<br style=\"box-sizing: border-box; color: inherit;\"/><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">缓存系统</span><br style=\"box-sizing: border-box; color: inherit;\"/>Django和memcached、redis或者其他的缓存系统联用，提高了页面的加载速度。<br style=\"box-sizing: border-box; color: inherit;\"/><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">国际化</span><br style=\"box-sizing: border-box; color: inherit;\"/>想要网页显示不同语言，比如中文、英文、还有各种语言。只需要在一个文件的设置中稍微那么修改一下。页面就会穿上各种语言的外衣。<br style=\"box-sizing: border-box; color: inherit;\"/><span style=\"box-sizing: border-box; color: inherit; font-weight: 700; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Django 的 App 理念很好。</span><br style=\"box-sizing: border-box; color: inherit;\"/>App 可插拔，是不可多得的思想。不需要了，可以直接删除，对系统影响不大。<br style=\"box-sizing: border-box; color: inherit;\"/>怎么样？Django是否强大到不可想象的地步了？不过大家也不用高兴的太早了。因为代码还是要写的，只不过用上了Django开发网站的时候更快速，更便捷了而已！</p><p><br/></p>', '0', 'cj', null);

-- ----------------------------
-- Table structure for blog_tutorial_tag
-- ----------------------------
DROP TABLE IF EXISTS `blog_tutorial_tag`;
CREATE TABLE `blog_tutorial_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tutorial_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `blog_tutorial_tag_tutorial_id_tag_id_7f77bf21_uniq` (`tutorial_id`,`tag_id`),
  KEY `blog_tutorial_tag_tag_id_cd2e46e3_fk_blog_tag_id` (`tag_id`),
  CONSTRAINT `blog_tutorial_tag_tag_id_cd2e46e3_fk_blog_tag_id` FOREIGN KEY (`tag_id`) REFERENCES `blog_tag` (`id`),
  CONSTRAINT `blog_tutorial_tag_tutorial_id_21448f19_fk_blog_tutorial_id` FOREIGN KEY (`tutorial_id`) REFERENCES `blog_tutorial` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_tutorial_tag
-- ----------------------------
INSERT INTO `blog_tutorial_tag` VALUES ('1', '1', '1');
INSERT INTO `blog_tutorial_tag` VALUES ('2', '1', '2');
INSERT INTO `blog_tutorial_tag` VALUES ('3', '1', '3');
INSERT INTO `blog_tutorial_tag` VALUES ('4', '1', '4');
INSERT INTO `blog_tutorial_tag` VALUES ('5', '2', '2');
INSERT INTO `blog_tutorial_tag` VALUES ('6', '3', '2');

-- ----------------------------
-- Table structure for captcha_captchastore
-- ----------------------------
DROP TABLE IF EXISTS `captcha_captchastore`;
CREATE TABLE `captcha_captchastore` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `challenge` varchar(32) NOT NULL,
  `response` varchar(32) NOT NULL,
  `hashkey` varchar(40) NOT NULL,
  `expiration` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `hashkey` (`hashkey`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of captcha_captchastore
-- ----------------------------
INSERT INTO `captcha_captchastore` VALUES ('1', 'RWOK', 'rwok', '39721d2bfde304beb38a69b570b77a654d64b9c5', '2019-11-13 21:25:55.303825');
INSERT INTO `captcha_captchastore` VALUES ('2', 'BTWF', 'btwf', '664f73f3053d270e021769d415f54e1d8723d93a', '2019-11-14 10:20:45.000293');
INSERT INTO `captcha_captchastore` VALUES ('3', 'ZBHK', 'zbhk', '0b3ab02597c38035c0312d68ef50f0ea621ee3be', '2019-11-16 16:48:03.259518');

-- ----------------------------
-- Table structure for course_course
-- ----------------------------
DROP TABLE IF EXISTS `course_course`;
CREATE TABLE `course_course` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `desc` varchar(300) NOT NULL,
  `detail` longtext NOT NULL,
  `degree` varchar(3) NOT NULL,
  `learn_times` int(11) NOT NULL,
  `students` int(11) NOT NULL,
  `fav_nums` int(11) NOT NULL,
  `image` varchar(200) DEFAULT NULL,
  `click_nums` int(11) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `course_org_id` int(11) DEFAULT NULL,
  `category` varchar(20) NOT NULL,
  `tag` varchar(10) NOT NULL,
  `teacher_id` int(11) DEFAULT NULL,
  `teacher_tell` varchar(300) NOT NULL,
  `youneed_know` varchar(300) NOT NULL,
  `is_banner` tinyint(1) NOT NULL,
  `online` date DEFAULT NULL,
  `price` smallint(5) unsigned NOT NULL,
  `type` varchar(1) NOT NULL,
  `volumn` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  KEY `course_course_course_org_id_6a10e205_fk_organizat` (`course_org_id`),
  KEY `course_course_teacher_id_f04a37b5_fk_organization_teacher_id` (`teacher_id`),
  CONSTRAINT `course_course_course_org_id_6a10e205_fk_organizat` FOREIGN KEY (`course_org_id`) REFERENCES `organization_courseorganization` (`id`),
  CONSTRAINT `course_course_teacher_id_f04a37b5_fk_organization_teacher_id` FOREIGN KEY (`teacher_id`) REFERENCES `organization_teacher` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of course_course
-- ----------------------------
INSERT INTO `course_course` VALUES ('1', 'django', 'django描述', 'django详情', 'cj', '100', '36', '1', 'course/2019/11/companylogo.jpg', '61', '2019-11-12 17:59:53.971681', '2019-12-02 16:23:49.194385', '1', '后端开发', 'django', '1', 'Django的进阶开发', 'Python只是需要有', '0', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('2', 'Java', 'Java描述', 'Java详情', 'zj', '0', '0', '0', 'course/2019/11/banner.jpg', '1', '2019-11-12 18:00:17.229504', '2019-11-15 11:56:49.581049', '1', '', '', null, '', '', '0', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('3', '新添课程1', '新添课程1描述', '新添课程1详情', 'gj', '543', '2', '0', 'course/2019/11/sass.jpg', '4', '2019-11-13 13:55:24.055690', '2019-11-15 16:11:56.628700', '2', '', 'django', null, '', '', '0', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('4', '新添课程2', '新添课程2描述', '新添课程2详情', 'zj', '3', '0', '0', 'course/2019/11/57aa86a0000145c512000460.jpg', '0', '2019-11-13 13:55:50.243909', '2019-11-13 13:55:50.243909', '2', '', '', null, '', '', '0', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('5', '新添课程3', '新添课程3描述', '新添课程3详情', 'zj', '345', '0', '0', 'course/2019/11/57aa86a0000145c512000460_H08hp76.jpg', '0', '2019-11-13 13:56:13.078427', '2019-11-13 13:56:13.078427', '1', '', 'django', null, '', '', '0', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('6', '新添课程4', '新添课程4描述', '新添课程4详情', 'cj', '435', '0', '0', 'course/2019/11/57a801860001c34b12000460.jpg', '0', '2019-11-13 13:56:34.790709', '2019-11-13 13:56:34.790709', '1', '', '', null, '', '', '0', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('7', '新添课程5', '新添课程5描述', '新添课程5详情', 'cj', '0', '0', '0', 'course/2019/11/01.jpg', '0', '2019-11-13 13:56:54.543304', '2019-11-13 13:56:54.543304', '1', '', '', null, '', '', '0', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('8', '新添课程6', '新添课程6描述', '新添课程详情', 'cj', '47', '0', '0', 'course/2019/11/banner_o6u7XuT.jpg', '0', '2019-11-13 13:57:19.113026', '2019-11-13 13:57:19.113026', '5', '', '', null, '', '', '0', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('9', '新加课程7', '新加课程7描述', '新加课程7详情', 'zj', '54', '0', '0', 'course/2019/11/01_jMb1pL9.jpg', '0', '2019-11-13 14:01:30.220238', '2019-11-13 14:01:30.220238', '3', '', '', null, '', '', '0', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('10', '新加课程8', '新加课程8描述', '新加课程8详情', 'gj', '456', '0', '0', 'course/2019/11/01_mid.jpg', '0', '2019-11-13 14:01:49.152428', '2019-11-13 14:01:49.153429', '4', '', 'django', null, '', '', '0', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('11', '新加课程9', '新加课程9描述', '新加课程9详情', 'zj', '425', '1', '0', 'course/2019/11/01_small.jpg', '2', '2019-11-13 14:02:15.406180', '2019-11-15 15:03:59.293478', '5', '', '', null, '', '', '0', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('12', '轮播课程（广告）1', '轮播课程（广告）1', '轮播课程（广告）1', 'cj', '0', '0', '0', 'course/2019/11/user.jpg', '4', '2019-11-15 15:49:48.354936', '2019-11-18 16:56:43.532223', '1', 'go', 'go', '1', '不告诉你', '需要学习', '1', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('13', '轮播课程（广告）2', '轮播课程（广告）2', '轮播课程（广告）2', 'zj', '0', '0', '0', 'course/2019/11/banner_t0yCuQe.jpg', '0', '2019-11-15 15:50:52.706896', '2019-11-15 15:51:26.713137', '2', '轮播课程（广告）2', '轮播课程（广告）2', '3', '轮播课程（广告）2', '轮播课程（广告）2', '1', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('14', '轮播课程（广告）3', '轮播课程（广告）3', '轮播课程（广告）3', 'zj', '0', '0', '0', 'course/2019/11/mysql.jpg', '1', '2019-11-15 15:51:16.692712', '2019-11-22 10:36:37.333193', '2', '轮播课程（广告）3', '轮播课程（广告）3', '1', '轮播课程（广告）3', '轮播课程（广告）3', '1', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('15', 'go语言', 'go语言', 'go语言', 'cj', '0', '0', '0', '', '0', '2019-11-15 18:27:54.880351', '2019-11-15 18:28:11.311067', '2', 'go语言', 'go语言', '4', 'go语言', 'go语言', '1', null, '0', '0', '0');
INSERT INTO `course_course` VALUES ('16', '测试富文本课程', '测试富文本课程', '<p>测试富文本课程</p><p><img src=\"/media/courses/ueditor/【专辑封面·心·1000x1000】_20191115220211_480.jpg\" title=\"\" alt=\"【专辑封面·心·1000x1000】.jpg\" width=\"499\" height=\"387\" style=\"width: 499px; height: 387px;\"/> </p><p><br/> </p><p>土和尚，好LOW!!!!&nbsp;<img src=\"http://img.baidu.com/hi/jx2/j_0016.gif\"/> </p>', 'zj', '0', '1', '0', 'course/2019/11/companyrank.png', '8', '2019-11-15 21:58:23.910313', '2019-12-02 16:16:29.559835', '3', '测试富文本课程', '测试富文本课程', '2', '测试富文本课程', '测试富文本课程', '0', null, '0', '0', '0');

-- ----------------------------
-- Table structure for course_courseresource
-- ----------------------------
DROP TABLE IF EXISTS `course_courseresource`;
CREATE TABLE `course_courseresource` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `download` varchar(100) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `course_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `course_courseresource_course_id_d5504211_fk_course_course_id` (`course_id`),
  CONSTRAINT `course_courseresource_course_id_d5504211_fk_course_course_id` FOREIGN KEY (`course_id`) REFERENCES `course_course` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of course_courseresource
-- ----------------------------
INSERT INTO `course_courseresource` VALUES ('1', '前端资源文件', 'course/resource/2019/11/media.zip', '2019-11-13 21:09:18.894949', '2019-11-13 21:09:18.894949', '1');

-- ----------------------------
-- Table structure for course_lesson
-- ----------------------------
DROP TABLE IF EXISTS `course_lesson`;
CREATE TABLE `course_lesson` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `course_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `course_lesson_course_id_65df4a1c_fk_course_course_id` (`course_id`),
  CONSTRAINT `course_lesson_course_id_65df4a1c_fk_course_course_id` FOREIGN KEY (`course_id`) REFERENCES `course_course` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of course_lesson
-- ----------------------------
INSERT INTO `course_lesson` VALUES ('1', '1.1 初始化', '2019-11-12 18:00:34.427649', '2019-11-13 16:58:31.177259', '1');
INSERT INTO `course_lesson` VALUES ('2', '2.1 继续学习', '2019-11-12 18:00:43.879610', '2019-11-13 16:58:41.335790', '1');
INSERT INTO `course_lesson` VALUES ('3', '2.2 如何部署服务', '2019-11-12 18:00:57.801841', '2019-11-13 16:58:49.356002', '1');
INSERT INTO `course_lesson` VALUES ('4', '3.1 课程总结', '2019-11-12 18:01:04.805770', '2019-11-13 16:59:20.941868', '1');

-- ----------------------------
-- Table structure for course_video
-- ----------------------------
DROP TABLE IF EXISTS `course_video`;
CREATE TABLE `course_video` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `lesson_id` int(11) DEFAULT NULL,
  `url` varchar(100) DEFAULT NULL,
  `learn_times` int(11) NOT NULL,
  `local_video_file` varchar(100),
  PRIMARY KEY (`id`),
  KEY `course_video_lesson_id_0731e8a9_fk_course_lesson_id` (`lesson_id`),
  CONSTRAINT `course_video_lesson_id_0731e8a9_fk_course_lesson_id` FOREIGN KEY (`lesson_id`) REFERENCES `course_lesson` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of course_video
-- ----------------------------
INSERT INTO `course_video` VALUES ('1', '视频1', '2019-11-12 18:01:19.338935', '2019-11-14 10:02:40.531793', '1', null, '0', 'course/video/2019/11/丫蛋蛋-于是我们口是心非地说着爱过就够了余生就算了.mp4');
INSERT INTO `course_video` VALUES ('2', '视频2', '2019-11-12 18:01:24.713837', '2019-11-13 16:58:09.630008', '1', 'www.sohu.com', '0', '');
INSERT INTO `course_video` VALUES ('3', '视频3', '2019-11-12 18:01:31.285167', '2019-11-12 18:01:31.285167', '2', '', '0', '');
INSERT INTO `course_video` VALUES ('4', '视频4', '2019-11-12 18:01:37.258665', '2019-11-12 18:01:37.258665', '2', '', '0', '');
INSERT INTO `course_video` VALUES ('5', '视频5', '2019-11-12 18:01:42.529077', '2019-11-12 18:01:42.529077', '2', '', '0', '');
INSERT INTO `course_video` VALUES ('6', '视频6', '2019-11-12 18:01:47.912280', '2019-11-12 18:01:47.912280', '3', '', '0', '');
INSERT INTO `course_video` VALUES ('7', '视频7', '2019-11-12 18:01:53.211754', '2019-11-12 18:01:53.211754', '4', '', '0', '');
INSERT INTO `course_video` VALUES ('8', '视频8', '2019-11-12 18:01:58.237515', '2019-11-12 18:01:58.237515', '4', '', '0', '');
INSERT INTO `course_video` VALUES ('9', '视频9', '2019-11-12 18:02:03.566574', '2019-11-12 18:02:03.566574', '4', '', '0', '');

-- ----------------------------
-- Table structure for django_admin_log
-- ----------------------------
DROP TABLE IF EXISTS `django_admin_log`;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_user_userprofile_id` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_user_userprofile_id` FOREIGN KEY (`user_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of django_admin_log
-- ----------------------------

-- ----------------------------
-- Table structure for django_content_type
-- ----------------------------
DROP TABLE IF EXISTS `django_content_type`;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=39 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of django_content_type
-- ----------------------------
INSERT INTO `django_content_type` VALUES ('1', 'admin', 'logentry');
INSERT INTO `django_content_type` VALUES ('3', 'auth', 'group');
INSERT INTO `django_content_type` VALUES ('2', 'auth', 'permission');
INSERT INTO `django_content_type` VALUES ('28', 'blog', 'article');
INSERT INTO `django_content_type` VALUES ('33', 'blog', 'articlecomment');
INSERT INTO `django_content_type` VALUES ('38', 'blog', 'articleresource');
INSERT INTO `django_content_type` VALUES ('32', 'blog', 'category');
INSERT INTO `django_content_type` VALUES ('31', 'blog', 'section');
INSERT INTO `django_content_type` VALUES ('29', 'blog', 'tag');
INSERT INTO `django_content_type` VALUES ('30', 'blog', 'tutorial');
INSERT INTO `django_content_type` VALUES ('25', 'captcha', 'captchastore');
INSERT INTO `django_content_type` VALUES ('4', 'contenttypes', 'contenttype');
INSERT INTO `django_content_type` VALUES ('26', 'course', 'bannercourse');
INSERT INTO `django_content_type` VALUES ('9', 'course', 'course');
INSERT INTO `django_content_type` VALUES ('12', 'course', 'courseresource');
INSERT INTO `django_content_type` VALUES ('10', 'course', 'lesson');
INSERT INTO `django_content_type` VALUES ('11', 'course', 'video');
INSERT INTO `django_content_type` VALUES ('36', 'operation', 'articlecomment');
INSERT INTO `django_content_type` VALUES ('16', 'operation', 'coursecomment');
INSERT INTO `django_content_type` VALUES ('35', 'operation', 'tutorialcomment');
INSERT INTO `django_content_type` VALUES ('17', 'operation', 'userask');
INSERT INTO `django_content_type` VALUES ('18', 'operation', 'usercourse');
INSERT INTO `django_content_type` VALUES ('19', 'operation', 'userfavorite');
INSERT INTO `django_content_type` VALUES ('20', 'operation', 'usermessage');
INSERT INTO `django_content_type` VALUES ('37', 'operation', 'userteacher');
INSERT INTO `django_content_type` VALUES ('34', 'operation', 'usertutorial');
INSERT INTO `django_content_type` VALUES ('13', 'organization', 'city');
INSERT INTO `django_content_type` VALUES ('14', 'organization', 'courseorganization');
INSERT INTO `django_content_type` VALUES ('15', 'organization', 'teacher');
INSERT INTO `django_content_type` VALUES ('27', 'organization', 'teacherassistant');
INSERT INTO `django_content_type` VALUES ('5', 'sessions', 'session');
INSERT INTO `django_content_type` VALUES ('6', 'user', 'banner');
INSERT INTO `django_content_type` VALUES ('7', 'user', 'emailverifyrecord');
INSERT INTO `django_content_type` VALUES ('8', 'user', 'userprofile');
INSERT INTO `django_content_type` VALUES ('21', 'xadmin', 'bookmark');
INSERT INTO `django_content_type` VALUES ('24', 'xadmin', 'log');
INSERT INTO `django_content_type` VALUES ('22', 'xadmin', 'usersettings');
INSERT INTO `django_content_type` VALUES ('23', 'xadmin', 'userwidget');

-- ----------------------------
-- Table structure for django_migrations
-- ----------------------------
DROP TABLE IF EXISTS `django_migrations`;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=71 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of django_migrations
-- ----------------------------
INSERT INTO `django_migrations` VALUES ('1', 'contenttypes', '0001_initial', '2019-11-12 17:28:15.560388');
INSERT INTO `django_migrations` VALUES ('2', 'contenttypes', '0002_remove_content_type_name', '2019-11-12 17:28:15.728400');
INSERT INTO `django_migrations` VALUES ('3', 'auth', '0001_initial', '2019-11-12 17:28:15.845790');
INSERT INTO `django_migrations` VALUES ('4', 'auth', '0002_alter_permission_name_max_length', '2019-11-12 17:28:16.224328');
INSERT INTO `django_migrations` VALUES ('5', 'auth', '0003_alter_user_email_max_length', '2019-11-12 17:28:16.235333');
INSERT INTO `django_migrations` VALUES ('6', 'auth', '0004_alter_user_username_opts', '2019-11-12 17:28:16.246332');
INSERT INTO `django_migrations` VALUES ('7', 'auth', '0005_alter_user_last_login_null', '2019-11-12 17:28:16.258328');
INSERT INTO `django_migrations` VALUES ('8', 'auth', '0006_require_contenttypes_0002', '2019-11-12 17:28:16.261327');
INSERT INTO `django_migrations` VALUES ('9', 'auth', '0007_alter_validators_add_error_messages', '2019-11-12 17:28:16.276313');
INSERT INTO `django_migrations` VALUES ('10', 'auth', '0008_alter_user_username_max_length', '2019-11-12 17:28:16.287333');
INSERT INTO `django_migrations` VALUES ('11', 'auth', '0009_alter_user_last_name_max_length', '2019-11-12 17:28:16.298332');
INSERT INTO `django_migrations` VALUES ('12', 'auth', '0010_alter_group_name_max_length', '2019-11-12 17:28:16.424347');
INSERT INTO `django_migrations` VALUES ('13', 'auth', '0011_update_proxy_permissions', '2019-11-12 17:28:16.436349');
INSERT INTO `django_migrations` VALUES ('14', 'user', '0001_initial', '2019-11-12 17:28:16.679373');
INSERT INTO `django_migrations` VALUES ('15', 'admin', '0001_initial', '2019-11-12 17:28:17.008939');
INSERT INTO `django_migrations` VALUES ('16', 'admin', '0002_logentry_remove_auto_add', '2019-11-12 17:28:17.131351');
INSERT INTO `django_migrations` VALUES ('17', 'admin', '0003_logentry_add_action_flag_choices', '2019-11-12 17:28:17.153357');
INSERT INTO `django_migrations` VALUES ('18', 'captcha', '0001_initial', '2019-11-12 17:28:17.197355');
INSERT INTO `django_migrations` VALUES ('19', 'organization', '0001_initial', '2019-11-12 17:28:17.367240');
INSERT INTO `django_migrations` VALUES ('20', 'course', '0001_initial', '2019-11-12 17:28:17.741248');
INSERT INTO `django_migrations` VALUES ('21', 'operation', '0001_initial', '2019-11-12 17:28:18.240670');
INSERT INTO `django_migrations` VALUES ('22', 'operation', '0002_auto_20191112_1727', '2019-11-12 17:28:18.722474');
INSERT INTO `django_migrations` VALUES ('23', 'sessions', '0001_initial', '2019-11-12 17:28:19.248328');
INSERT INTO `django_migrations` VALUES ('24', 'xadmin', '0001_initial', '2019-11-12 17:28:19.491149');
INSERT INTO `django_migrations` VALUES ('25', 'xadmin', '0002_log', '2019-11-12 17:28:19.962917');
INSERT INTO `django_migrations` VALUES ('26', 'xadmin', '0003_auto_20160715_0100', '2019-11-12 17:28:20.304177');
INSERT INTO `django_migrations` VALUES ('27', 'organization', '0002_teacher_avatar', '2019-11-12 20:48:36.969988');
INSERT INTO `django_migrations` VALUES ('28', 'course', '0002_course_category', '2019-11-13 15:01:18.186429');
INSERT INTO `django_migrations` VALUES ('29', 'course', '0003_auto_20191113_1500', '2019-11-13 15:01:18.203426');
INSERT INTO `django_migrations` VALUES ('30', 'course', '0004_course_tag', '2019-11-13 15:22:18.567727');
INSERT INTO `django_migrations` VALUES ('31', 'course', '0005_video_url', '2019-11-13 16:57:29.381358');
INSERT INTO `django_migrations` VALUES ('32', 'course', '0006_video_learn_times', '2019-11-13 21:05:39.518237');
INSERT INTO `django_migrations` VALUES ('33', 'course', '0007_course_teacher', '2019-11-13 21:15:56.446342');
INSERT INTO `django_migrations` VALUES ('34', 'course', '0008_auto_20191113_2140', '2019-11-13 21:40:10.882093');
INSERT INTO `django_migrations` VALUES ('35', 'course', '0009_auto_20191113_2148', '2019-11-13 21:48:14.925130');
INSERT INTO `django_migrations` VALUES ('36', 'course', '0010_video_local_video_file', '2019-11-14 10:00:34.859936');
INSERT INTO `django_migrations` VALUES ('37', 'course', '0011_auto_20191114_1002', '2019-11-14 10:02:27.956554');
INSERT INTO `django_migrations` VALUES ('38', 'user', '0002_auto_20191114_2055', '2019-11-14 20:55:13.843874');
INSERT INTO `django_migrations` VALUES ('39', 'user', '0003_auto_20191114_2056', '2019-11-14 20:56:55.834304');
INSERT INTO `django_migrations` VALUES ('40', 'course', '0012_course_is_banner', '2019-11-15 15:39:43.004277');
INSERT INTO `django_migrations` VALUES ('41', 'organization', '0003_courseorganization_tag', '2019-11-15 16:11:02.687185');
INSERT INTO `django_migrations` VALUES ('42', 'course', '0013_auto_20191115_2155', '2019-11-15 21:55:45.541172');
INSERT INTO `django_migrations` VALUES ('43', 'course', '0014_auto_20191118_1438', '2019-11-18 14:38:38.542307');
INSERT INTO `django_migrations` VALUES ('44', 'organization', '0004_auto_20191118_1438', '2019-11-18 14:38:38.908661');
INSERT INTO `django_migrations` VALUES ('45', 'user', '0004_userprofile_study_time', '2019-11-18 14:38:39.291668');
INSERT INTO `django_migrations` VALUES ('46', 'course', '0015_auto_20191118_1520', '2019-11-18 15:21:01.108773');
INSERT INTO `django_migrations` VALUES ('47', 'organization', '0005_auto_20191118_1520', '2019-11-18 15:21:01.178342');
INSERT INTO `django_migrations` VALUES ('48', 'user', '0005_auto_20191118_1520', '2019-11-18 15:21:01.289011');
INSERT INTO `django_migrations` VALUES ('49', 'blog', '0001_initial', '2019-11-22 17:16:21.014313');
INSERT INTO `django_migrations` VALUES ('50', 'user', '0006_auto_20191122_1716', '2019-11-22 17:16:21.796341');
INSERT INTO `django_migrations` VALUES ('51', 'blog', '0002_auto_20191122_1742', '2019-11-22 17:42:17.502638');
INSERT INTO `django_migrations` VALUES ('52', 'blog', '0003_auto_20191123_1738', '2019-11-23 17:38:17.206164');
INSERT INTO `django_migrations` VALUES ('53', 'organization', '0006_auto_20191123_1738', '2019-11-23 17:38:17.434179');
INSERT INTO `django_migrations` VALUES ('54', 'blog', '0004_auto_20191124_1037', '2019-11-24 10:38:11.918805');
INSERT INTO `django_migrations` VALUES ('55', 'blog', '0005_auto_20191124_1053', '2019-11-24 10:54:02.394372');
INSERT INTO `django_migrations` VALUES ('56', 'blog', '0006_auto_20191124_1415', '2019-11-24 14:16:14.344049');
INSERT INTO `django_migrations` VALUES ('57', 'blog', '0007_auto_20191124_1430', '2019-11-24 14:31:02.540424');
INSERT INTO `django_migrations` VALUES ('58', 'blog', '0008_article_section', '2019-11-24 14:39:32.453728');
INSERT INTO `django_migrations` VALUES ('59', 'blog', '0009_tutorial_students', '2019-11-24 16:49:09.252992');
INSERT INTO `django_migrations` VALUES ('60', 'blog', '0010_tutorial_degree', '2019-11-24 16:53:12.463010');
INSERT INTO `django_migrations` VALUES ('61', 'blog', '0011_auto_20191125_1536', '2019-11-25 15:36:52.178633');
INSERT INTO `django_migrations` VALUES ('62', 'operation', '0003_auto_20191125_1536', '2019-11-25 15:36:52.481318');
INSERT INTO `django_migrations` VALUES ('63', 'blog', '0012_delete_articlecomment', '2019-11-25 18:22:24.315946');
INSERT INTO `django_migrations` VALUES ('64', 'operation', '0004_articlecomment_tutorialcomment', '2019-11-25 18:22:24.523030');
INSERT INTO `django_migrations` VALUES ('65', 'blog', '0013_article_image', '2019-11-27 17:15:04.649569');
INSERT INTO `django_migrations` VALUES ('66', 'operation', '0005_auto_20191127_1714', '2019-11-27 17:15:04.991594');
INSERT INTO `django_migrations` VALUES ('67', 'blog', '0014_auto_20191202_1807', '2019-12-02 18:12:16.961007');
INSERT INTO `django_migrations` VALUES ('68', 'operation', '0006_userteacher', '2019-12-02 18:12:17.046090');
INSERT INTO `django_migrations` VALUES ('69', 'blog', '0015_articleresource', '2019-12-04 15:08:02.827023');
INSERT INTO `django_migrations` VALUES ('70', 'blog', '0016_auto_20191207_1153', '2019-12-07 11:53:17.841711');

-- ----------------------------
-- Table structure for django_session
-- ----------------------------
DROP TABLE IF EXISTS `django_session`;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of django_session
-- ----------------------------
INSERT INTO `django_session` VALUES ('1vtchme79lg31wcw7z2x06z142oj0hbc', 'YjM0MzNjZjQ0MjQ0MDYwYTQxMzk1MmFiMzNkMDY4MzUwYWRmMTMxZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJibG9nIiwiYXJ0aWNsZSJdLCIiXX0=', '2019-12-16 16:50:57.625393');
INSERT INTO `django_session` VALUES ('2ngvihdl8onm0twmqhyc580qhqkfrqyu', 'N2UxMWUwZDY4NGIwMDhkMzY1MDlhNTNkMWQ2NmE4NmJlM2YwZTFlNjp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImJjZDY3OTRmMjc0YjYwOWI0YjIxZmJhNjhkNGZhMjVhMzAwMzg1YWIifQ==', '2019-11-29 16:14:35.012359');
INSERT INTO `django_session` VALUES ('4kuvjnz1bcct5hdgz4652ku8j976fbyd', 'YTViNTVjNDE2MTVmNzgzMzA0Y2Y4N2YzM2ZiYjBkMjkyMDYyMTQxMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJvcmdhbml6YXRpb24iLCJjb3Vyc2Vvcmdhbml6YXRpb24iXSwiIl19', '2019-11-26 18:38:38.428546');
INSERT INTO `django_session` VALUES ('6u6olp9qo6n31z5z0r64jehqflw3tn39', 'YjM0MzNjZjQ0MjQ0MDYwYTQxMzk1MmFiMzNkMDY4MzUwYWRmMTMxZTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJibG9nIiwiYXJ0aWNsZSJdLCIiXX0=', '2019-12-08 14:44:22.145932');
INSERT INTO `django_session` VALUES ('9x2t0kh2jrolui4udy51snlk98psf29b', 'N2UxMWUwZDY4NGIwMDhkMzY1MDlhNTNkMWQ2NmE4NmJlM2YwZTFlNjp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImJjZDY3OTRmMjc0YjYwOWI0YjIxZmJhNjhkNGZhMjVhMzAwMzg1YWIifQ==', '2019-12-06 09:53:50.639763');
INSERT INTO `django_session` VALUES ('b3n7xc9i5zgz2off1363jbamkqohadc1', 'ZTFhYmU5N2UxMjdiZDI5ZjliZmEyYTYyOGFiMWQ3ZTYxZTMyZTM5Njp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJvcmdhbml6YXRpb24iLCJ0ZWFjaGVyIl0sIiJdfQ==', '2019-11-26 20:50:34.270872');
INSERT INTO `django_session` VALUES ('cz02txvv8i0bdk68y3grhl53zepbob39', 'ZGI1OTg0MjU4ZTlkZjI3YmI0NzRkNmVkNzUxNTAwYmExYTE2OTY1ODp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJvcGVyYXRpb24iLCJ0dXRvcmlhbGNvbW1lbnQiXSwiIl19', '2019-12-10 16:36:52.208878');
INSERT INTO `django_session` VALUES ('g1w0recpzj7rzh0hi6m7mtp8326kethd', 'YWRhMmU3ZTgzN2Q5NGU2OWRjMjQ0ZDkxZjc0ZTc0ZjFlYTlmZDI0NDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJibG9nIiwidHV0b3JpYWwiXSwiIl19', '2019-12-08 13:55:42.212976');
INSERT INTO `django_session` VALUES ('ied3dc1djje4rs96iqwq94pjyrmw3a2v', 'YjJkNDBhNjZkMDJjNTc5NWNiMWUzNzVhYjU2NTRhY2MwMmE3OTUxOTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJ1c2VyIiwidXNlcnByb2ZpbGUiXSwiIl19', '2019-11-28 15:26:23.353464');
INSERT INTO `django_session` VALUES ('kn0yfa9i0l2mr1zpxdy0w4pznss7pvt3', 'Y2U2NGIwZTY1MTFkODBhMmVmYzM3ODgzNTNiNjE1MjQ3NDUyYmMyMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkifQ==', '2019-11-27 23:01:49.226684');
INSERT INTO `django_session` VALUES ('p33cpuotp3b26p8c5tkvf2s1ug8dix00', 'ZjVkMTJkOTQwODY2NDIzNTRkZWVkY2Y3NjY2NDFlY2E4NzU1ZGQxMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJjb3Vyc2UiLCJjb3Vyc2UiXSwiIl19', '2019-11-29 22:05:52.142975');
INSERT INTO `django_session` VALUES ('p66p33g5507s9m6173jl583kr2hwkkvm', 'N2UxMWUwZDY4NGIwMDhkMzY1MDlhNTNkMWQ2NmE4NmJlM2YwZTFlNjp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImJjZDY3OTRmMjc0YjYwOWI0YjIxZmJhNjhkNGZhMjVhMzAwMzg1YWIifQ==', '2019-11-28 20:23:06.328188');
INSERT INTO `django_session` VALUES ('s6qnsbsyxs1ik06br43ixltyz13z0ya1', 'N2UxMWUwZDY4NGIwMDhkMzY1MDlhNTNkMWQ2NmE4NmJlM2YwZTFlNjp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6ImJjZDY3OTRmMjc0YjYwOWI0YjIxZmJhNjhkNGZhMjVhMzAwMzg1YWIifQ==', '2019-11-29 09:58:44.126244');
INSERT INTO `django_session` VALUES ('szjy8fn7tcicgrgm8l3qrsm903jodvt7', 'ZTY0NzZiMTk4N2E4YWRhNmQyYTFjMDg3NWJlNjlmYzllOTNhODEwYTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJjb3Vyc2UiLCJsZXNzb24iXSwiIl19', '2019-11-27 16:59:21.259892');
INSERT INTO `django_session` VALUES ('wcqdm5vk33rc0kif05w3js7l4bkfh5t2', 'YWRhMmU3ZTgzN2Q5NGU2OWRjMjQ0ZDkxZjc0ZTc0ZjFlYTlmZDI0NDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJibG9nIiwidHV0b3JpYWwiXSwiIl19', '2019-12-09 16:09:12.179072');
INSERT INTO `django_session` VALUES ('xqgj0te6l3mr6qv7qahxyjmbgio5513j', 'ZWNjYTM1NGUzZTIyOTE4MWNiODhhZGUwN2E5MDZiMzQxZDIzZTc4Mzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJjb3Vyc2UiLCJiYW5uZXJjb3Vyc2UiXSwiIl19', '2019-11-29 18:28:15.301097');
INSERT INTO `django_session` VALUES ('zp7savpdxfj35h5d9njkesvfu1z187e5', 'YWRhMmU3ZTgzN2Q5NGU2OWRjMjQ0ZDkxZjc0ZTc0ZjFlYTlmZDI0NDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJibG9nIiwidHV0b3JpYWwiXSwiIl19', '2019-12-21 11:51:50.144030');
INSERT INTO `django_session` VALUES ('zvbta6tmta7v8ndvmq5k8u3fofjcwuaj', 'MDc0MGM3NWY0MGU1YTY1M2Y3YjcyNWY0MTdlNWE4MTg2ZmQ0ODVmMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoidXNlci52aWV3cy5DdXN0b21pemVkQmFja2VuZCIsIl9hdXRoX3VzZXJfaGFzaCI6IjBiMDFhMjMyMDg4MWZjZGU0NjI4ZTlhYWMyYjEzODgwODMyMjc1ZTkiLCJMSVNUX1FVRVJZIjpbWyJ1c2VyIiwiYmFubmVyIl0sIiJdfQ==', '2019-12-11 22:01:25.531517');

-- ----------------------------
-- Table structure for operation_articlecomment
-- ----------------------------
DROP TABLE IF EXISTS `operation_articlecomment`;
CREATE TABLE `operation_articlecomment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `comments` longtext NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `article_id` int(11) DEFAULT NULL,
  `pid_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `operation_articlecom_pid_id_d4b80080_fk_operation` (`pid_id`),
  KEY `operation_articlecomment_user_id_5b96b048_fk_user_userprofile_id` (`user_id`),
  KEY `operation_articlecomment_article_id_3e463359_fk_blog_article_id` (`article_id`),
  CONSTRAINT `operation_articlecom_pid_id_d4b80080_fk_operation` FOREIGN KEY (`pid_id`) REFERENCES `operation_articlecomment` (`id`),
  CONSTRAINT `operation_articlecomment_article_id_3e463359_fk_blog_article_id` FOREIGN KEY (`article_id`) REFERENCES `blog_article` (`id`),
  CONSTRAINT `operation_articlecomment_user_id_5b96b048_fk_user_userprofile_id` FOREIGN KEY (`user_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of operation_articlecomment
-- ----------------------------

-- ----------------------------
-- Table structure for operation_coursecomment
-- ----------------------------
DROP TABLE IF EXISTS `operation_coursecomment`;
CREATE TABLE `operation_coursecomment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `comments` varchar(200) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `course_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `operation_coursecomment_course_id_ae7551b0_fk_course_course_id` (`course_id`),
  KEY `operation_coursecomment_user_id_8f3ff0f8_fk_user_userprofile_id` (`user_id`),
  CONSTRAINT `operation_coursecomment_course_id_ae7551b0_fk_course_course_id` FOREIGN KEY (`course_id`) REFERENCES `course_course` (`id`),
  CONSTRAINT `operation_coursecomment_user_id_8f3ff0f8_fk_user_userprofile_id` FOREIGN KEY (`user_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of operation_coursecomment
-- ----------------------------
INSERT INTO `operation_coursecomment` VALUES ('1', 'hello', '2019-11-13 22:30:44.930184', '2019-11-13 22:30:44.930184', '1', '1');
INSERT INTO `operation_coursecomment` VALUES ('2', '喝了咯', '2019-11-13 22:30:52.561433', '2019-11-13 22:30:52.561433', '1', '1');
INSERT INTO `operation_coursecomment` VALUES ('3', '第三条评论', '2019-11-13 22:31:22.747779', '2019-11-13 22:31:22.747779', '1', '1');
INSERT INTO `operation_coursecomment` VALUES ('4', '第四条评论 Nov 22 2019\n', '2019-11-22 10:27:52.977786', '2019-11-22 10:27:52.977786', '1', '2');

-- ----------------------------
-- Table structure for operation_tutorialcomment
-- ----------------------------
DROP TABLE IF EXISTS `operation_tutorialcomment`;
CREATE TABLE `operation_tutorialcomment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `comments` longtext NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `pid_id` int(11) DEFAULT NULL,
  `tutorial_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `operation_tutorialco_pid_id_fa24d056_fk_operation` (`pid_id`),
  KEY `operation_tutorialco_user_id_7b490b29_fk_user_user` (`user_id`),
  KEY `operation_tutorialco_tutorial_id_e2312355_fk_blog_tuto` (`tutorial_id`),
  CONSTRAINT `operation_tutorialco_pid_id_fa24d056_fk_operation` FOREIGN KEY (`pid_id`) REFERENCES `operation_tutorialcomment` (`id`),
  CONSTRAINT `operation_tutorialco_tutorial_id_e2312355_fk_blog_tuto` FOREIGN KEY (`tutorial_id`) REFERENCES `blog_tutorial` (`id`),
  CONSTRAINT `operation_tutorialco_user_id_7b490b29_fk_user_user` FOREIGN KEY (`user_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of operation_tutorialcomment
-- ----------------------------
INSERT INTO `operation_tutorialcomment` VALUES ('1', '这么好的教程第一次看到！谢谢了！', '2019-11-26 16:37:20.605252', null, '1', '2');
INSERT INTO `operation_tutorialcomment` VALUES ('2', '太好了！！！', '2019-11-26 16:37:30.645644', null, '1', '2');
INSERT INTO `operation_tutorialcomment` VALUES ('3', '不错！！！', '2019-11-26 16:37:39.217472', null, '1', '2');
INSERT INTO `operation_tutorialcomment` VALUES ('4', '第一级！！很好', '2019-11-26 16:37:58.733179', null, '1', '2');
INSERT INTO `operation_tutorialcomment` VALUES ('5', '第二级很好的回复！', '2019-11-26 16:38:19.592616', '4', '1', '2');
INSERT INTO `operation_tutorialcomment` VALUES ('6', '第三级的回复', '2019-11-26 16:38:42.461461', '5', '1', '2');

-- ----------------------------
-- Table structure for operation_userask
-- ----------------------------
DROP TABLE IF EXISTS `operation_userask`;
CREATE TABLE `operation_userask` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `mobile` varchar(11) NOT NULL,
  `course_name` varchar(50) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of operation_userask
-- ----------------------------
INSERT INTO `operation_userask` VALUES ('1', '张三', '13341104998', 'django', '2019-11-12 17:57:34.487706');
INSERT INTO `operation_userask` VALUES ('2', '张三', '13341101490', '就是问问', '2019-11-16 14:02:09.156024');

-- ----------------------------
-- Table structure for operation_usercourse
-- ----------------------------
DROP TABLE IF EXISTS `operation_usercourse`;
CREATE TABLE `operation_usercourse` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `created_time` datetime(6) NOT NULL,
  `course_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `operation_usercourse_course_id_9f1eab2e` (`course_id`),
  KEY `operation_usercourse_user_id_835fe81a` (`user_id`),
  CONSTRAINT `operation_usercourse_course_id_9f1eab2e_fk_course_course_id` FOREIGN KEY (`course_id`) REFERENCES `course_course` (`id`),
  CONSTRAINT `operation_usercourse_user_id_835fe81a_fk_user_userprofile_id` FOREIGN KEY (`user_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of operation_usercourse
-- ----------------------------
INSERT INTO `operation_usercourse` VALUES ('1', '2019-11-13 15:09:22.339017', '1', '2');
INSERT INTO `operation_usercourse` VALUES ('2', '2019-11-13 22:48:44.769098', '2', '2');
INSERT INTO `operation_usercourse` VALUES ('3', '2019-11-13 22:48:53.898444', '3', '1');
INSERT INTO `operation_usercourse` VALUES ('4', '2019-11-13 22:49:00.886685', '2', '1');
INSERT INTO `operation_usercourse` VALUES ('5', '2019-11-13 23:08:20.903748', '1', '1');
INSERT INTO `operation_usercourse` VALUES ('6', '2019-11-15 15:03:35.880542', '11', '2');
INSERT INTO `operation_usercourse` VALUES ('7', '2019-11-16 13:59:22.833564', '16', '2');

-- ----------------------------
-- Table structure for operation_userfavorite
-- ----------------------------
DROP TABLE IF EXISTS `operation_userfavorite`;
CREATE TABLE `operation_userfavorite` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `fav_id` int(11) NOT NULL,
  `fav_type` int(11) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `operation_userfavorite_user_id_ad46a6af` (`user_id`),
  CONSTRAINT `operation_userfavorite_user_id_ad46a6af_fk_user_userprofile_id` FOREIGN KEY (`user_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of operation_userfavorite
-- ----------------------------
INSERT INTO `operation_userfavorite` VALUES ('11', '1', '1', '2019-11-13 15:55:03.318154', '2019-11-13 15:55:03.318154', '1');
INSERT INTO `operation_userfavorite` VALUES ('16', '1', '2', '2019-11-15 11:55:40.711736', '2019-11-15 11:55:40.711736', '2');
INSERT INTO `operation_userfavorite` VALUES ('19', '2', '1', '2019-11-15 11:56:51.848901', '2019-11-15 11:56:51.848901', '2');
INSERT INTO `operation_userfavorite` VALUES ('23', '1', '3', '2019-11-16 14:00:08.522663', '2019-11-16 14:00:08.522663', '2');
INSERT INTO `operation_userfavorite` VALUES ('24', '1', '2', '2019-11-18 16:55:43.806660', '2019-11-18 16:55:43.806660', '1');
INSERT INTO `operation_userfavorite` VALUES ('25', '1', '1', '2019-11-22 09:56:57.628784', '2019-11-22 09:56:57.628784', '2');

-- ----------------------------
-- Table structure for operation_usermessage
-- ----------------------------
DROP TABLE IF EXISTS `operation_usermessage`;
CREATE TABLE `operation_usermessage` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user` int(11) NOT NULL,
  `message` varchar(500) NOT NULL,
  `has_read` tinyint(1) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of operation_usermessage
-- ----------------------------
INSERT INTO `operation_usermessage` VALUES ('1', '2', '测试消息', '1', '2019-11-15 13:55:56.544006', '2019-11-15 15:27:53.325830');

-- ----------------------------
-- Table structure for operation_userteacher
-- ----------------------------
DROP TABLE IF EXISTS `operation_userteacher`;
CREATE TABLE `operation_userteacher` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `created_time` datetime(6) NOT NULL,
  `teacher_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `teacher_id` (`teacher_id`),
  UNIQUE KEY `user_id` (`user_id`),
  CONSTRAINT `operation_userteache_teacher_id_f687c924_fk_organizat` FOREIGN KEY (`teacher_id`) REFERENCES `organization_teacher` (`id`),
  CONSTRAINT `operation_userteacher_user_id_23a1cca6_fk_user_userprofile_id` FOREIGN KEY (`user_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of operation_userteacher
-- ----------------------------

-- ----------------------------
-- Table structure for operation_usertutorial
-- ----------------------------
DROP TABLE IF EXISTS `operation_usertutorial`;
CREATE TABLE `operation_usertutorial` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `created_time` datetime(6) NOT NULL,
  `tutorial_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `operation_usertutorial_tutorial_id_d4a50e7a_fk_blog_tutorial_id` (`tutorial_id`),
  KEY `operation_usertutorial_user_id_c5a13a56_fk_user_userprofile_id` (`user_id`),
  CONSTRAINT `operation_usertutorial_tutorial_id_d4a50e7a_fk_blog_tutorial_id` FOREIGN KEY (`tutorial_id`) REFERENCES `blog_tutorial` (`id`),
  CONSTRAINT `operation_usertutorial_user_id_c5a13a56_fk_user_userprofile_id` FOREIGN KEY (`user_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of operation_usertutorial
-- ----------------------------
INSERT INTO `operation_usertutorial` VALUES ('1', '2019-11-25 16:40:49.215013', '1', '1');
INSERT INTO `operation_usertutorial` VALUES ('2', '2019-11-26 16:16:21.427278', '1', '2');

-- ----------------------------
-- Table structure for organization_city
-- ----------------------------
DROP TABLE IF EXISTS `organization_city`;
CREATE TABLE `organization_city` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL,
  `desc` varchar(200) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of organization_city
-- ----------------------------
INSERT INTO `organization_city` VALUES ('1', '北京市', '北京市', '2019-11-12 17:50:14.610209', '2019-11-12 17:50:14.610209');
INSERT INTO `organization_city` VALUES ('2', '天津市', '天津市', '2019-11-12 17:50:21.312690', '2019-11-12 17:50:21.312690');
INSERT INTO `organization_city` VALUES ('3', '广州市', '广州市', '2019-11-12 17:50:27.539561', '2019-11-12 17:50:27.539561');
INSERT INTO `organization_city` VALUES ('4', '广西市', '广西市', '2019-11-12 17:50:55.983374', '2019-11-12 17:50:55.983374');

-- ----------------------------
-- Table structure for organization_courseorganization
-- ----------------------------
DROP TABLE IF EXISTS `organization_courseorganization`;
CREATE TABLE `organization_courseorganization` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `desc` longtext NOT NULL,
  `category` varchar(20) NOT NULL,
  `click_nums` int(11) NOT NULL,
  `fav_nums` int(11) NOT NULL,
  `image` varchar(200) NOT NULL,
  `address` varchar(150) NOT NULL,
  `student_nums` int(11) NOT NULL,
  `course_nums` int(10) unsigned NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `city_id` int(11) DEFAULT NULL,
  `tag` varchar(10) NOT NULL,
  `tutorial_nums` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  KEY `organization_courseo_city_id_1c556a50_fk_organizat` (`city_id`),
  CONSTRAINT `organization_courseo_city_id_1c556a50_fk_organizat` FOREIGN KEY (`city_id`) REFERENCES `organization_city` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of organization_courseorganization
-- ----------------------------
INSERT INTO `organization_courseorganization` VALUES ('1', '课程机构1', '课程机构1课程机构1课程机构1课程机构1课程机构1课程机构1', 'pxjg', '10', '1', 'org/2019/11/bank1_wlbUQFD.jpg', 'xxx', '0', '0', '2019-11-12 17:51:55.912352', '2019-12-02 16:24:03.300699', '1', '全国知名', '0');
INSERT INTO `organization_courseorganization` VALUES ('2', '课程机构2', '课程机构2课程机构2课程机构2课程机构2课程机构2', 'pxjg', '0', '0', 'org/2019/11/bank2_se23e5M.jpg', 'aaa', '0', '0', '2019-11-12 17:52:18.376850', '2019-11-26 17:44:28.577866', '1', '全国知名', '0');
INSERT INTO `organization_courseorganization` VALUES ('3', '课程机构3', '课程机构3课程机构3课程机构3课程机构3课程机构3', 'pxjg', '0', '0', 'org/2019/11/bank3_V1eh3gS.jpg', 'bbb', '0', '2', '2019-11-12 17:52:32.832782', '2019-11-15 22:05:51.718908', '1', '全国知名', '0');
INSERT INTO `organization_courseorganization` VALUES ('4', '课程机构4', 'v课程机构4课程机构4课程机构4课程机构4', 'pxjg', '0', '0', 'org/2019/11/bank4_PiuJ4zi.jpg', 'ddd', '0', '0', '2019-11-12 17:52:51.617203', '2019-11-12 17:52:51.617203', '1', '全国知名', '0');
INSERT INTO `organization_courseorganization` VALUES ('5', '课程机构5', '课程机构5课程机构5课程机构5课程机构5', 'pxjg', '3', '0', 'org/2019/11/bank5_lBYixxR.jpg', 'eee', '0', '0', '2019-11-12 17:53:08.177489', '2019-11-15 15:27:51.729047', '1', '全国知名', '0');
INSERT INTO `organization_courseorganization` VALUES ('6', '课程机构6', '课程机构6课程机构6课程机构6', 'pxjg', '1', '0', 'org/2019/11/bank1_1oIBhP3.jpg', 'xxx', '0', '0', '2019-11-12 17:55:59.795547', '2019-11-15 16:11:53.185697', '2', '全国知名', '0');
INSERT INTO `organization_courseorganization` VALUES ('7', '课程机构7', '课程机构7课程机构7课程机构7课程机构7', 'gr', '0', '0', 'org/2019/11/bank2_cVMpU9a.jpg', 'xxx', '0', '0', '2019-11-12 17:56:14.511100', '2019-11-12 17:56:14.511100', null, '全国知名', '0');
INSERT INTO `organization_courseorganization` VALUES ('8', '课程机构8', '课程机构8课程机构8课程机构8课程机构8', 'gx', '0', '0', 'org/2019/11/bank3_35GFzfY.jpg', 'xxx', '0', '0', '2019-11-12 17:56:30.960724', '2019-11-12 17:56:30.960724', '3', '全国知名', '0');
INSERT INTO `organization_courseorganization` VALUES ('9', '课程机构9', '课程机构9课程机构9课程机构9课程机构9', 'pxjg', '0', '0', 'org/2019/11/bank4_7gfEqES.jpg', 'xxxx', '0', '0', '2019-11-12 17:56:43.211651', '2019-11-12 17:56:43.212650', null, '全国知名', '0');
INSERT INTO `organization_courseorganization` VALUES ('10', '课程机构10', '课程机构10课程机构10课程机构10课程机构10课程机构10', 'gr', '0', '0', 'org/2019/11/bank5_GCafEFE.jpg', 'xxx', '0', '0', '2019-11-12 17:57:04.154432', '2019-11-12 17:57:04.154432', null, '全国知名', '0');

-- ----------------------------
-- Table structure for organization_teacher
-- ----------------------------
DROP TABLE IF EXISTS `organization_teacher`;
CREATE TABLE `organization_teacher` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `work_years` int(11) NOT NULL,
  `work_company` varchar(50) NOT NULL,
  `work_position` varchar(50) NOT NULL,
  `points` varchar(50) NOT NULL,
  `click_nums` int(11) NOT NULL,
  `fav_nums` int(11) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `courseorganization_id` int(11) DEFAULT NULL,
  `avatar` varchar(200) NOT NULL,
  `introduction` longtext NOT NULL,
  `nickname` varchar(30) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `organization_teacher_courseorganization_id_dc582ceb` (`courseorganization_id`),
  KEY `organization_teacher_nickname_123d8ec4` (`nickname`),
  CONSTRAINT `organization_teacher_courseorganization_i_dc582ceb_fk_organizat` FOREIGN KEY (`courseorganization_id`) REFERENCES `organization_courseorganization` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of organization_teacher
-- ----------------------------
INSERT INTO `organization_teacher` VALUES ('1', '授课教师1', '0', 'aaa', 'aaa', 'aaa', '3', '1', '2019-11-12 17:53:40.799170', '2019-11-18 16:55:27.786928', '1', 'teacher/2019/11/aobama.png', '', '');
INSERT INTO `organization_teacher` VALUES ('2', '授课教师2', '0', 'bbb', 'bbb', 'bbb', '0', '0', '2019-11-12 17:53:52.257131', '2019-11-12 17:53:52.257131', '1', 'avatar/default.png', '', '');
INSERT INTO `organization_teacher` VALUES ('3', '授课教师3', '0', 'ccc', 'ccc', 'ccc', '10', '0', '2019-11-12 17:54:01.070646', '2019-11-12 17:54:01.070646', '2', 'avatar/default.png', '', '');
INSERT INTO `organization_teacher` VALUES ('4', '授课教师4', '0', 'ddd', 'dd', 'dd', '0', '0', '2019-11-12 17:54:10.362354', '2019-11-12 17:54:10.362354', '1', 'avatar/default.png', '', '');

-- ----------------------------
-- Table structure for organization_teacherassistant
-- ----------------------------
DROP TABLE IF EXISTS `organization_teacherassistant`;
CREATE TABLE `organization_teacherassistant` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `nickname` varchar(30) NOT NULL,
  `hobby` varchar(100) DEFAULT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `teacher_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `teacher_id` (`teacher_id`),
  KEY `organization_teacherassistant_nickname_4ee46fdb` (`nickname`),
  CONSTRAINT `organization_teacher_teacher_id_984e3bfc_fk_organizat` FOREIGN KEY (`teacher_id`) REFERENCES `organization_teacher` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of organization_teacherassistant
-- ----------------------------

-- ----------------------------
-- Table structure for user_banner
-- ----------------------------
DROP TABLE IF EXISTS `user_banner`;
CREATE TABLE `user_banner` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `image` varchar(200) NOT NULL,
  `url` varchar(100) NOT NULL,
  `index` int(11) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user_banner
-- ----------------------------
INSERT INTO `user_banner` VALUES ('1', '轮播图1', 'banner/2019/11/57a801860001c34b12000460.jpg', 'http://bing.com', '100', '2019-11-15 15:45:40.773182', '2019-11-15 15:45:40.773182');
INSERT INTO `user_banner` VALUES ('2', '轮播图2', 'banner/2019/11/57aa86a0000145c512000460.jpg', 'http://baidu.com', '100', '2019-11-15 15:45:53.005535', '2019-11-15 15:45:53.005535');
INSERT INTO `user_banner` VALUES ('3', '轮播图3', 'banner/2019/11/banner.jpg', 'http://sohu.com', '100', '2019-11-15 15:46:05.731943', '2019-11-15 15:46:05.731943');
INSERT INTO `user_banner` VALUES ('4', '轮播图4', 'banner/2019/11/companydes.jpg', 'http://sina.com.cn', '100', '2019-11-15 15:46:20.971572', '2019-11-15 15:46:20.972574');
INSERT INTO `user_banner` VALUES ('5', '轮播图5', 'banner/2019/11/module4_3.jpg', 'http://itcast.cn', '100', '2019-11-15 15:46:49.535464', '2019-11-15 15:46:49.535464');

-- ----------------------------
-- Table structure for user_emailverifyrecord
-- ----------------------------
DROP TABLE IF EXISTS `user_emailverifyrecord`;
CREATE TABLE `user_emailverifyrecord` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `code` varchar(20) NOT NULL,
  `email` varchar(50) NOT NULL,
  `send_type` varchar(30) NOT NULL,
  `send_time` datetime(6) NOT NULL,
  `created_time` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user_emailverifyrecord
-- ----------------------------
INSERT INTO `user_emailverifyrecord` VALUES ('1', '0hg2', 'yangemail8@sina.cn', 'update_email', '2019-11-14 20:57:07.500185', '2019-11-14 20:57:07.502167');
INSERT INTO `user_emailverifyrecord` VALUES ('2', 'A5pT', 'yangemail88888@sina.cn', 'update_email', '2019-11-15 09:59:18.326009', '2019-11-15 09:59:18.327008');
INSERT INTO `user_emailverifyrecord` VALUES ('3', 'EvDu', 'yangemail8@sina.cn', 'update_email', '2019-11-15 10:02:48.624716', '2019-11-15 10:02:48.626715');

-- ----------------------------
-- Table structure for user_userprofile
-- ----------------------------
DROP TABLE IF EXISTS `user_userprofile`;
CREATE TABLE `user_userprofile` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  `nick_name` varchar(50) DEFAULT NULL,
  `birthday` date DEFAULT NULL,
  `gender` varchar(1) DEFAULT NULL,
  `address` varchar(100) DEFAULT NULL,
  `mobile` varchar(11) DEFAULT NULL,
  `avatar` varchar(200) NOT NULL,
  `url` varchar(100) DEFAULT NULL,
  `created_time` datetime(6) NOT NULL,
  `last_modified_time` datetime(6) NOT NULL,
  `study_time` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `user_userprofile_mobile_c642d063_uniq` (`mobile`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user_userprofile
-- ----------------------------
INSERT INTO `user_userprofile` VALUES ('1', 'pbkdf2_sha256$150000$DmQWrMA4BOPa$mmg7ZslPSs8CSMq10KsXfwGcbYOzhNudKKKIlH9D+wg=', '2019-12-07 11:44:45.809859', '1', 'admin', '', '', 'benedict_911@hotmail.com', '1', '1', '2019-11-12 17:28:57.000000', null, null, null, null, null, 'avatar/2019/11/gj.png', null, '2019-11-12 17:28:57.877478', '2019-11-13 12:04:06.236957', '0');
INSERT INTO `user_userprofile` VALUES ('2', 'pbkdf2_sha256$150000$55BjoRN8f7jm$dugJiwPoY3Cf2+f33VrboF6Pz9fKqQm7HdDisQnqpJI=', '2019-11-22 09:53:50.634761', '0', 'jake', 'Jake', 'Z', 'yangemail8@sina.cn', '0', '1', '2019-11-12 17:54:47.000000', 'Jake Z', '2019-11-03', 'M', null, '13341100000', 'avatar/2019/11/gx_yYH5PY6.png', 'http://www.jaketechlab.com', '2019-11-12 17:54:47.455558', '2019-11-15 11:15:18.627191', '0');

-- ----------------------------
-- Table structure for user_userprofile_groups
-- ----------------------------
DROP TABLE IF EXISTS `user_userprofile_groups`;
CREATE TABLE `user_userprofile_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userprofile_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_userprofile_groups_userprofile_id_group_id_52847a61_uniq` (`userprofile_id`,`group_id`),
  KEY `user_userprofile_groups_group_id_98cc4038_fk_auth_group_id` (`group_id`),
  CONSTRAINT `user_userprofile_gro_userprofile_id_49724c40_fk_user_user` FOREIGN KEY (`userprofile_id`) REFERENCES `user_userprofile` (`id`),
  CONSTRAINT `user_userprofile_groups_group_id_98cc4038_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user_userprofile_groups
-- ----------------------------

-- ----------------------------
-- Table structure for user_userprofile_user_permissions
-- ----------------------------
DROP TABLE IF EXISTS `user_userprofile_user_permissions`;
CREATE TABLE `user_userprofile_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userprofile_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_userprofile_user_pe_userprofile_id_permissio_2e86ceca_uniq` (`userprofile_id`,`permission_id`),
  KEY `user_userprofile_use_permission_id_7f559b23_fk_auth_perm` (`permission_id`),
  CONSTRAINT `user_userprofile_use_permission_id_7f559b23_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `user_userprofile_use_userprofile_id_68dc814c_fk_user_user` FOREIGN KEY (`userprofile_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user_userprofile_user_permissions
-- ----------------------------

-- ----------------------------
-- Table structure for xadmin_bookmark
-- ----------------------------
DROP TABLE IF EXISTS `xadmin_bookmark`;
CREATE TABLE `xadmin_bookmark` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(128) NOT NULL,
  `url_name` varchar(64) NOT NULL,
  `query` varchar(1000) NOT NULL,
  `is_share` tinyint(1) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `xadmin_bookmark_content_type_id_60941679` (`content_type_id`),
  KEY `xadmin_bookmark_user_id_42d307fc` (`user_id`),
  CONSTRAINT `xadmin_bookmark_content_type_id_60941679_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `xadmin_bookmark_user_id_42d307fc_fk_user_userprofile_id` FOREIGN KEY (`user_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of xadmin_bookmark
-- ----------------------------

-- ----------------------------
-- Table structure for xadmin_log
-- ----------------------------
DROP TABLE IF EXISTS `xadmin_log`;
CREATE TABLE `xadmin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `ip_addr` char(39) DEFAULT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` varchar(32) NOT NULL,
  `message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `xadmin_log_content_type_id_2a6cb852` (`content_type_id`),
  KEY `xadmin_log_user_id_bb16a176` (`user_id`),
  CONSTRAINT `xadmin_log_content_type_id_2a6cb852_fk_django_content_type_id` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `xadmin_log_user_id_bb16a176_fk_user_userprofile_id` FOREIGN KEY (`user_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=116 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of xadmin_log
-- ----------------------------
INSERT INTO `xadmin_log` VALUES ('1', '2019-11-12 17:50:14.614211', '127.0.0.1', '1', '北京市', 'create', 'Added.', '13', '1');
INSERT INTO `xadmin_log` VALUES ('2', '2019-11-12 17:50:21.316686', '127.0.0.1', '2', '天津市', 'create', 'Added.', '13', '1');
INSERT INTO `xadmin_log` VALUES ('3', '2019-11-12 17:50:27.543560', '127.0.0.1', '3', '广州市', 'create', 'Added.', '13', '1');
INSERT INTO `xadmin_log` VALUES ('4', '2019-11-12 17:50:55.986386', '127.0.0.1', '4', '广西市', 'create', 'Added.', '13', '1');
INSERT INTO `xadmin_log` VALUES ('5', '2019-11-12 17:51:55.915364', '127.0.0.1', '1', '课程机构1', 'create', 'Added.', '14', '1');
INSERT INTO `xadmin_log` VALUES ('6', '2019-11-12 17:52:18.380865', '127.0.0.1', '2', '课程机构2', 'create', 'Added.', '14', '1');
INSERT INTO `xadmin_log` VALUES ('7', '2019-11-12 17:52:32.836784', '127.0.0.1', '3', '课程机构3', 'create', 'Added.', '14', '1');
INSERT INTO `xadmin_log` VALUES ('8', '2019-11-12 17:52:51.621199', '127.0.0.1', '4', '课程机构4', 'create', 'Added.', '14', '1');
INSERT INTO `xadmin_log` VALUES ('9', '2019-11-12 17:53:08.178489', '127.0.0.1', '5', '课程机构5', 'create', 'Added.', '14', '1');
INSERT INTO `xadmin_log` VALUES ('10', '2019-11-12 17:53:40.802192', '127.0.0.1', '1', '授课教师1', 'create', 'Added.', '15', '1');
INSERT INTO `xadmin_log` VALUES ('11', '2019-11-12 17:53:52.260112', '127.0.0.1', '2', '授课教师2', 'create', 'Added.', '15', '1');
INSERT INTO `xadmin_log` VALUES ('12', '2019-11-12 17:54:01.074627', '127.0.0.1', '3', '授课教师3', 'create', 'Added.', '15', '1');
INSERT INTO `xadmin_log` VALUES ('13', '2019-11-12 17:54:10.366357', '127.0.0.1', '4', '授课教师4', 'create', 'Added.', '15', '1');
INSERT INTO `xadmin_log` VALUES ('14', '2019-11-12 17:54:47.457559', '127.0.0.1', '2', 'jake', 'create', 'Added.', '8', '1');
INSERT INTO `xadmin_log` VALUES ('15', '2019-11-12 17:55:59.798550', '127.0.0.1', '6', '课程机构6', 'create', 'Added.', '14', '1');
INSERT INTO `xadmin_log` VALUES ('16', '2019-11-12 17:56:14.512099', '127.0.0.1', '7', '课程机构7', 'create', 'Added.', '14', '1');
INSERT INTO `xadmin_log` VALUES ('17', '2019-11-12 17:56:30.961726', '127.0.0.1', '8', '课程机构8', 'create', 'Added.', '14', '1');
INSERT INTO `xadmin_log` VALUES ('18', '2019-11-12 17:56:43.213651', '127.0.0.1', '9', '课程机构9', 'create', 'Added.', '14', '1');
INSERT INTO `xadmin_log` VALUES ('19', '2019-11-12 17:57:04.156435', '127.0.0.1', '10', '课程机构10', 'create', 'Added.', '14', '1');
INSERT INTO `xadmin_log` VALUES ('20', '2019-11-12 17:59:53.975677', '127.0.0.1', '1', 'django', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('21', '2019-11-12 18:00:17.232497', '127.0.0.1', '2', 'Java', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('22', '2019-11-12 18:00:34.430651', '127.0.0.1', '1', 'Lesson object (1)', 'create', 'Added.', '10', '1');
INSERT INTO `xadmin_log` VALUES ('23', '2019-11-12 18:00:43.882610', '127.0.0.1', '2', 'Lesson object (2)', 'create', 'Added.', '10', '1');
INSERT INTO `xadmin_log` VALUES ('24', '2019-11-12 18:00:57.804840', '127.0.0.1', '3', 'Lesson object (3)', 'create', 'Added.', '10', '1');
INSERT INTO `xadmin_log` VALUES ('25', '2019-11-12 18:01:04.809752', '127.0.0.1', '4', 'Lesson object (4)', 'create', 'Added.', '10', '1');
INSERT INTO `xadmin_log` VALUES ('26', '2019-11-12 18:01:19.341925', '127.0.0.1', '1', 'Video object (1)', 'create', 'Added.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('27', '2019-11-12 18:01:24.718840', '127.0.0.1', '2', 'Video object (2)', 'create', 'Added.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('28', '2019-11-12 18:01:31.289168', '127.0.0.1', '3', 'Video object (3)', 'create', 'Added.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('29', '2019-11-12 18:01:37.261665', '127.0.0.1', '4', 'Video object (4)', 'create', 'Added.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('30', '2019-11-12 18:01:42.531081', '127.0.0.1', '5', 'Video object (5)', 'create', 'Added.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('31', '2019-11-12 18:01:47.913280', '127.0.0.1', '6', 'Video object (6)', 'create', 'Added.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('32', '2019-11-12 18:01:53.215774', '127.0.0.1', '7', 'Video object (7)', 'create', 'Added.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('33', '2019-11-12 18:01:58.240514', '127.0.0.1', '8', 'Video object (8)', 'create', 'Added.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('34', '2019-11-12 18:02:03.569574', '127.0.0.1', '9', 'Video object (9)', 'create', 'Added.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('35', '2019-11-12 20:50:33.911862', '127.0.0.1', '1', '授课教师1', 'change', 'Changed avatar.', '15', '1');
INSERT INTO `xadmin_log` VALUES ('36', '2019-11-13 12:04:06.242956', '127.0.0.1', '1', 'admin', 'change', 'Changed avatar.', '8', '1');
INSERT INTO `xadmin_log` VALUES ('37', '2019-11-13 13:55:24.058690', '127.0.0.1', '3', '新添课程1', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('38', '2019-11-13 13:55:50.245909', '127.0.0.1', '4', '新添课程2', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('39', '2019-11-13 13:56:13.080429', '127.0.0.1', '5', '新添课程3', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('40', '2019-11-13 13:56:34.792730', '127.0.0.1', '6', '新添课程4', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('41', '2019-11-13 13:56:54.546309', '127.0.0.1', '7', '新添课程5', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('42', '2019-11-13 13:57:19.115011', '127.0.0.1', '8', '新添课程6', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('43', '2019-11-13 14:01:30.222252', '127.0.0.1', '9', '新加课程7', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('44', '2019-11-13 14:01:49.154429', '127.0.0.1', '10', '新加课程8', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('45', '2019-11-13 14:02:15.408178', '127.0.0.1', '11', '新加课程9', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('46', '2019-11-13 15:09:22.344017', '127.0.0.1', '1', 'UserCourse object (1)', 'create', 'Added.', '18', '1');
INSERT INTO `xadmin_log` VALUES ('47', '2019-11-13 15:09:55.255135', '127.0.0.1', '2', 'jake', 'change', 'Changed avatar.', '8', '1');
INSERT INTO `xadmin_log` VALUES ('48', '2019-11-13 16:58:03.145481', '127.0.0.1', '1', '视频1', 'change', 'Changed url.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('49', '2019-11-13 16:58:09.635008', '127.0.0.1', '2', '视频2', 'change', 'Changed url.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('50', '2019-11-13 16:58:31.180259', '127.0.0.1', '1', '1.1 初始化', 'change', 'Changed name.', '10', '1');
INSERT INTO `xadmin_log` VALUES ('51', '2019-11-13 16:58:41.338792', '127.0.0.1', '2', '2.1 继续学习', 'change', 'Changed name.', '10', '1');
INSERT INTO `xadmin_log` VALUES ('52', '2019-11-13 16:58:49.358013', '127.0.0.1', '3', '2.2 如何部署服务', 'change', 'Changed name.', '10', '1');
INSERT INTO `xadmin_log` VALUES ('53', '2019-11-13 16:59:20.946887', '127.0.0.1', '4', '3.1 课程总结', 'change', 'Changed name.', '10', '1');
INSERT INTO `xadmin_log` VALUES ('54', '2019-11-13 21:09:18.897947', '127.0.0.1', '1', '前端资源文件', 'create', 'Added.', '12', '1');
INSERT INTO `xadmin_log` VALUES ('55', '2019-11-13 21:40:55.131872', '127.0.0.1', '1', 'django', 'change', 'Changed teacher.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('56', '2019-11-13 21:49:12.267379', '127.0.0.1', '1', 'django', 'change', 'Changed youneed_know and teacher_tell.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('57', '2019-11-13 22:48:44.771098', '127.0.0.1', '2', 'UserCourse object (2)', 'create', 'Added.', '18', '1');
INSERT INTO `xadmin_log` VALUES ('58', '2019-11-13 22:48:53.899444', '127.0.0.1', '3', 'UserCourse object (3)', 'create', 'Added.', '18', '1');
INSERT INTO `xadmin_log` VALUES ('59', '2019-11-13 22:49:00.887686', '127.0.0.1', '4', 'UserCourse object (4)', 'create', 'Added.', '18', '1');
INSERT INTO `xadmin_log` VALUES ('60', '2019-11-14 10:01:29.707289', '127.0.0.1', '1', '视频1', 'change', 'Changed local_video_file.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('61', '2019-11-14 10:02:40.534794', '127.0.0.1', '1', '视频1', 'change', 'Changed url.', '11', '1');
INSERT INTO `xadmin_log` VALUES ('62', '2019-11-14 15:25:17.849360', '127.0.0.1', '2', 'jake', 'change', 'Changed first_name, last_name, email, nick_name, birthday, gender, address, mobile, avatar and url.', '8', '1');
INSERT INTO `xadmin_log` VALUES ('63', '2019-11-15 13:55:56.548007', '127.0.0.1', '1', 'UserMessage object (1)', 'create', 'Added.', '20', '1');
INSERT INTO `xadmin_log` VALUES ('64', '2019-11-15 15:45:40.777178', '127.0.0.1', '1', 'Banner object (1)', 'create', 'Added.', '6', '1');
INSERT INTO `xadmin_log` VALUES ('65', '2019-11-15 15:45:53.009521', '127.0.0.1', '2', 'Banner object (2)', 'create', 'Added.', '6', '1');
INSERT INTO `xadmin_log` VALUES ('66', '2019-11-15 15:46:05.736940', '127.0.0.1', '3', 'Banner object (3)', 'create', 'Added.', '6', '1');
INSERT INTO `xadmin_log` VALUES ('67', '2019-11-15 15:46:20.975571', '127.0.0.1', '4', 'Banner object (4)', 'create', 'Added.', '6', '1');
INSERT INTO `xadmin_log` VALUES ('68', '2019-11-15 15:46:49.536465', '127.0.0.1', '5', 'Banner object (5)', 'create', 'Added.', '6', '1');
INSERT INTO `xadmin_log` VALUES ('69', '2019-11-15 15:49:48.357936', '127.0.0.1', '12', '轮播课程（广告）1', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('70', '2019-11-15 15:50:28.169993', '127.0.0.1', '12', '轮播课程（广告）1', 'change', 'Changed is_banner.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('71', '2019-11-15 15:50:52.708913', '127.0.0.1', '13', '轮播课程（广告）2', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('72', '2019-11-15 15:51:16.698712', '127.0.0.1', '14', '轮播课程（广告）3', 'create', 'Added.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('73', '2019-11-15 15:51:26.718123', '127.0.0.1', '13', '轮播课程（广告）2', 'change', 'Changed image.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('74', '2019-11-15 18:27:54.883352', '127.0.0.1', '15', 'go语言', 'create', 'Added.', '26', '1');
INSERT INTO `xadmin_log` VALUES ('75', '2019-11-15 18:28:11.315064', '127.0.0.1', '15', 'go语言', 'change', 'Changed is_banner.', '9', '1');
INSERT INTO `xadmin_log` VALUES ('76', '2019-11-24 11:10:09.901770', '127.0.0.1', '1', 'Tag object (1)', 'create', '已添加。', '29', '1');
INSERT INTO `xadmin_log` VALUES ('77', '2019-11-24 11:10:21.039865', '127.0.0.1', '2', 'Tag object (2)', 'create', '已添加。', '29', '1');
INSERT INTO `xadmin_log` VALUES ('78', '2019-11-24 11:10:33.860973', '127.0.0.1', '3', 'Tag object (3)', 'create', '已添加。', '29', '1');
INSERT INTO `xadmin_log` VALUES ('79', '2019-11-24 11:10:41.597478', '127.0.0.1', '4', 'Tag object (4)', 'create', '已添加。', '29', '1');
INSERT INTO `xadmin_log` VALUES ('80', '2019-11-24 11:22:26.990998', '127.0.0.1', '1', '分类后端开发 - 父级分类 None', 'create', '已添加。', '32', '1');
INSERT INTO `xadmin_log` VALUES ('81', '2019-11-24 11:22:53.771666', '127.0.0.1', '2', '分类前端开发 - 父级分类 None', 'create', '已添加。', '32', '1');
INSERT INTO `xadmin_log` VALUES ('82', '2019-11-24 11:23:28.586145', '127.0.0.1', '3', '分类移动开发 - 父级分类 None', 'create', '已添加。', '32', '1');
INSERT INTO `xadmin_log` VALUES ('83', '2019-11-24 11:23:55.156289', '127.0.0.1', '4', '分类Python - 父级分类 分类后端开发 - 父级分类 None', 'create', '已添加。', '32', '1');
INSERT INTO `xadmin_log` VALUES ('84', '2019-11-24 11:24:31.081662', '127.0.0.1', '5', '分类Django - 父级分类 分类后端开发 - 父级分类 None', 'create', '已添加。', '32', '1');
INSERT INTO `xadmin_log` VALUES ('85', '2019-11-24 11:25:00.362271', '127.0.0.1', '6', '分类爬虫 - 父级分类 分类后端开发 - 父级分类 None', 'create', '已添加。', '32', '1');
INSERT INTO `xadmin_log` VALUES ('86', '2019-11-24 13:55:41.907939', '127.0.0.1', '1', 'Django REST Framework教程', 'create', '已添加。', '30', '1');
INSERT INTO `xadmin_log` VALUES ('87', '2019-11-24 14:05:09.785819', '127.0.0.1', '2', 'Django博客开发教程', 'create', '已添加。', '30', '1');
INSERT INTO `xadmin_log` VALUES ('88', '2019-11-24 14:06:29.784379', '127.0.0.1', '3', 'Django2.0入门教程', 'create', '已添加。', '30', '1');
INSERT INTO `xadmin_log` VALUES ('89', '2019-11-24 14:12:42.251221', '127.0.0.1', '1', '环境部署', 'create', '已添加。', '31', '1');
INSERT INTO `xadmin_log` VALUES ('90', '2019-11-24 14:12:49.748866', '127.0.0.1', '2', '教程目录', 'create', '已添加。', '31', '1');
INSERT INTO `xadmin_log` VALUES ('91', '2019-11-24 14:13:01.101411', '127.0.0.1', '3', '相关推荐', 'create', '已添加。', '31', '1');
INSERT INTO `xadmin_log` VALUES ('92', '2019-11-24 14:17:24.934352', '127.0.0.1', '3', '相关推荐', 'change', '修改 tutorial', '31', '1');
INSERT INTO `xadmin_log` VALUES ('93', '2019-11-24 14:17:40.237617', '127.0.0.1', '1', '环境部署', 'change', '修改 index', '31', '1');
INSERT INTO `xadmin_log` VALUES ('94', '2019-11-24 14:17:51.961641', '127.0.0.1', '2', '教程目录', 'change', '修改 index', '31', '1');
INSERT INTO `xadmin_log` VALUES ('95', '2019-11-24 14:17:57.041786', '127.0.0.1', '3', '相关推荐', 'change', '修改 index', '31', '1');
INSERT INTO `xadmin_log` VALUES ('96', '2019-11-24 14:34:33.559128', '127.0.0.1', '5', 'Python', 'create', '已添加。', '29', '1');
INSERT INTO `xadmin_log` VALUES ('97', '2019-11-24 14:34:40.840635', '127.0.0.1', '1', 'virtualenv使用技巧大全,python新手必备知识', 'create', '已添加。', '28', '1');
INSERT INTO `xadmin_log` VALUES ('98', '2019-11-24 14:35:39.945205', '127.0.0.1', '2', 'CentOS7下部署Django项目详细操作步骤', 'create', '已添加。', '28', '1');
INSERT INTO `xadmin_log` VALUES ('99', '2019-11-24 14:39:54.572484', '127.0.0.1', '2', 'CentOS7下部署Django项目详细操作步骤', 'change', '修改 content 和 section', '28', '1');
INSERT INTO `xadmin_log` VALUES ('100', '2019-11-24 14:43:30.634573', '127.0.0.1', '3', 'Django REST Framework教程:请求和响应', 'create', '已添加。', '28', '1');
INSERT INTO `xadmin_log` VALUES ('101', '2019-11-24 14:44:21.789140', '127.0.0.1', '4', 'Django REST Framework教程:认证和权限', 'create', '已添加。', '28', '1');
INSERT INTO `xadmin_log` VALUES ('102', '2019-11-25 16:09:11.742035', '127.0.0.1', '1', 'Django REST Framework教程', 'change', '修改 tutorial_org 和 detail', '30', '1');
INSERT INTO `xadmin_log` VALUES ('103', '2019-11-26 16:37:20.609240', '127.0.0.1', '1', '1', 'create', '已添加。', '35', '1');
INSERT INTO `xadmin_log` VALUES ('104', '2019-11-26 16:37:30.647627', '127.0.0.1', '2', '2', 'create', '已添加。', '35', '1');
INSERT INTO `xadmin_log` VALUES ('105', '2019-11-26 16:37:39.219471', '127.0.0.1', '3', '3', 'create', '已添加。', '35', '1');
INSERT INTO `xadmin_log` VALUES ('106', '2019-11-26 16:37:58.734194', '127.0.0.1', '4', '4', 'create', '已添加。', '35', '1');
INSERT INTO `xadmin_log` VALUES ('107', '2019-11-26 16:38:19.593616', '127.0.0.1', '5', '5', 'create', '已添加。', '35', '1');
INSERT INTO `xadmin_log` VALUES ('108', '2019-11-26 16:38:42.462461', '127.0.0.1', '6', '6', 'create', '已添加。', '35', '1');
INSERT INTO `xadmin_log` VALUES ('109', '2019-12-02 15:54:55.741858', '127.0.0.1', '4', 'Django REST Framework教程:认证和权限', 'change', '修改 content 和 click_nums', '28', '1');
INSERT INTO `xadmin_log` VALUES ('110', '2019-12-02 16:17:37.592675', '127.0.0.1', '4', 'Django REST Framework教程:认证和权限', 'change', '修改 image', '28', '1');
INSERT INTO `xadmin_log` VALUES ('111', '2019-12-02 16:19:12.155997', '127.0.0.1', '3', 'Django REST Framework教程:请求和响应', 'change', '修改 content 和 image', '28', '1');
INSERT INTO `xadmin_log` VALUES ('112', '2019-12-02 16:49:35.435336', '127.0.0.1', '2', 'CentOS7下部署Django项目详细操作步骤', 'change', 'Changed image, click_nums and tag.', '28', '1');
INSERT INTO `xadmin_log` VALUES ('113', '2019-12-02 16:50:46.774469', '127.0.0.1', '1', 'virtualenv使用技巧大全,python新手必备知识', 'change', 'Changed content, image and section.', '28', '1');
INSERT INTO `xadmin_log` VALUES ('114', '2019-12-07 11:49:38.464588', '127.0.0.1', '6', '分类：spider - 父级分类：后端开发', 'change', 'Changed name and desc.', '32', '1');
INSERT INTO `xadmin_log` VALUES ('115', '2019-12-07 11:50:00.387014', '127.0.0.1', '5', '分类：Django - 父级分类：后端开发', 'change', 'Changed desc.', '32', '1');

-- ----------------------------
-- Table structure for xadmin_usersettings
-- ----------------------------
DROP TABLE IF EXISTS `xadmin_usersettings`;
CREATE TABLE `xadmin_usersettings` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `key` varchar(256) NOT NULL,
  `value` longtext NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `xadmin_usersettings_user_id_edeabe4a` (`user_id`),
  CONSTRAINT `xadmin_usersettings_user_id_edeabe4a_fk_user_userprofile_id` FOREIGN KEY (`user_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of xadmin_usersettings
-- ----------------------------
INSERT INTO `xadmin_usersettings` VALUES ('1', 'dashboard:home:pos', '', '1');
INSERT INTO `xadmin_usersettings` VALUES ('2', 'user_userprofile_editform_portal', ',,,,|', '1');

-- ----------------------------
-- Table structure for xadmin_userwidget
-- ----------------------------
DROP TABLE IF EXISTS `xadmin_userwidget`;
CREATE TABLE `xadmin_userwidget` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `page_id` varchar(256) NOT NULL,
  `widget_type` varchar(50) NOT NULL,
  `value` longtext NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `xadmin_userwidget_user_id_c159233a` (`user_id`),
  CONSTRAINT `xadmin_userwidget_user_id_c159233a_fk_user_userprofile_id` FOREIGN KEY (`user_id`) REFERENCES `user_userprofile` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of xadmin_userwidget
-- ----------------------------
